"0","#installing hash library "
"0","library(hash)"
"2","hash-2.2.6.3 provided by Decision Patterns

"
"2","
Attaching package: ‘hash’

"
"2","The following object is masked from ‘package:biomaRt’:

    keys

"
"2","The following object is masked from ‘package:AnnotationDbi’:

    keys

"
"2","The following objects are masked from ‘package:SummarizedExperiment’:

    values, values<-

"
"2","The following objects are masked from ‘package:GenomicRanges’:

    values, values<-

"
"2","The following objects are masked from ‘package:S4Vectors’:

    values, values<-

"
"0","#Storing hashmap as variable"
"0","h <- hash()"
"0",""
"0","#Pulling viral etiology designations from metadata"
"0","viralType <- metadataSubset$Virus_infection"
"0","viralType <- as.data.frame(viralType)"
"0",""
"0","#Renaming the column"
"0","colnames(viralType) <- c(""Virus"")"
"0",""
"0","#Pulling out genes on y chromosome from reference genome"
"0","chrY_gene_ids <- genes[which(genes$chr== ""chrY""), ]"
"0",""
"0","#Creating a hashmap that links the ensembl id to gene name so the value is the ensembl id and the key is the gene name (if I ask for gene name it will report the ensembl id)"
"0","for (idx in 1:dim(chrY_gene_ids)[1]) {"
"0","     name <- chrY_gene_ids$gene_name[idx]"
"0","     ensembl_id <- chrY_gene_ids$GENEID[idx]"
"0","  if (ensembl_id %in% rownames(vCorrectLibtype)) {   "
"0","       h[[name]] <- ensembl_id"
"0","  }"
"0","}"
"0",""
"0","#vCorrectLibtype[grep(pattern=""^ENSG00000229807"", rownames(vCorrectLibtype)), ]"
"0","for (gene in keys(h)) {"
"0",""
"0","  #setting the created hashmap into variable "
"0","  ensembl_id <- h[[gene]]"
"0","  "
"0","  #Pulling expression data from vCorrectLibtype for the y-linked genes"
"0","  expressionData <- vCorrectLibtype[which(rownames(vCorrectLibtype)== ensembl_id),]"
"0","  expressionData <- t(expressionData)"
"0","  expressionData<- as.data.frame(expressionData)"
"0","  "
"0","  #Creating dataframe with the gene expression data and corresponding sample viral etiology "
"0","  expressionData <- cbind(expressionData,viralType)"
"0","  "
"0","  #Males_expressionData <- expressionData[which(grepl(""XY"",rownames(expressionData),fixed=TRUE)),]"
"0","  #Females_expressionData <- expressionData[which(grepl(""XX"",rownames(expressionData),fixed=TRUE)),]"
"0","  "
"0","  #Subsetting by tumor samples"
"0","  Tumor_expressionData <- expressionData[grepl(""tumor"",rownames(expressionData),fixed=TRUE),]"
"0","  Tumor_expressionData <- as.data.frame(Tumor_expressionData)"
"0","  "
"0","  #Adding sample ids as rownames to tumor samples"
"0","  rownames(Tumor_expressionData) <- rownames(expressionData)[grepl(""tumor"",rownames(expressionData),fixed=TRUE)]"
"0","  "
"0","  #Subsetting by adjacent samples "
"0","  Adjacent_expressionData <- expressionData[grepl(""adjacent"",rownames(expressionData),fixed=TRUE),]"
"0","  Adjacent_expressionData <- as.data.frame(Adjacent_expressionData)"
"0","  "
"0","  #Adding sample ids as rownames to adjacent samples"
"0","  rownames(Adjacent_expressionData) <- rownames(expressionData)[grepl(""adjacent"",rownames(expressionData),fixed=TRUE)]"
"0","  "
"0","  #Creating new column that adds a 1 if the sample sex is Male and a 0 if the sample is female"
"0","  Tumor_expressionData$SexNumeric <- as.numeric(grepl(""XY"",rownames(Tumor_expressionData),fixed=TRUE))"
"0","  Adjacent_expressionData$SexNumeric <- as.numeric(grepl(""XY"",rownames(Adjacent_expressionData),fixed=TRUE))"
"0","  "
"0","  #Renaming columns"
"0","  colnames(Tumor_expressionData)<- c(""Expression"",""Virus"", ""SexNumeric"")"
"0","   "
"0","   #Creating a new column that as a 0 if the sample is male HBV, 1 if male HCV, 2 if female HBV, and 3 if female HCV "
"0","  Tumor_expressionData$SexViralNumeric <- ifelse(Tumor_expressionData$SexNumeric==""1"" & Tumor_expressionData$Virus==""HBV"", 0,"
"0","                                                 ifelse(Tumor_expressionData$SexNumeric==""1"" & Tumor_expressionData$Virus==""HCV"",1,"
"0","                                                        ifelse(Tumor_expressionData$SexNumeric==""0"" & Tumor_expressionData$Virus==""HBV"",2,3)))"
"0","  Adjacent_expressionData$SexViralNumeric <- ifelse(Adjacent_expressionData$SexNumeric==""1"" & Adjacent_expressionData$Virus==""HBV"", 0,"
"0","                                                 ifelse(Adjacent_expressionData$SexNumeric==""1"" & Adjacent_expressionData$Virus==""HCV"",1,"
"0","                                                        ifelse(Adjacent_expressionData$SexNumeric==""0"" & Adjacent_expressionData$Virus==""HBV"",2,3)))"
"0","  "
"0","  #For loop that adds the sample numbers in a new column called ""Names"""
"0","  for (i in 1:dim(Tumor_expressionData)[1]) {"
"0","    Tumor_expressionData$Names[i] = substr(row.names(Tumor_expressionData)[i],3,5)"
"0","  }"
"0","  "
"0","  for (i in 1:dim(Adjacent_expressionData)[1]) {"
"0","    Adjacent_expressionData$Names[i] = substr(row.names(Adjacent_expressionData)[i],3,5)"
"0","  }"
"0",""
"0","  #Renaming columns "
"0","   colnames(Tumor_expressionData)<- c(""Expression"",""Virus"", ""SexNumeric"",""SexViralNumeric"",""Names"")"
"0","   colnames(Adjacent_expressionData)<- c(""Expression"",""Virus"", ""SexNumeric"",""SexViralNumeric"",""Names"")"
"0","   "
"0","  #Creates a box plot of y-linked gene expression data of all tumor samples "
"0","  pdf(paste(""~/Desktop/ResearchProjects/LiverCancerProject/DEA_removed_samples/newFigures/y_linked_gene_tumor_expression/"",gene,""_tumor_expression_data.pdf"",sep=""""), width=12, height=12)"
"0","  print(ggplot(Tumor_expressionData, aes(x=reorder(Names,SexViralNumeric),y= log(as.numeric(Expression)+0.01,10),fill=SexViralNumeric)) + geom_bar(stat=""identity"", colour=""black"") +theme(axis.text.x = element_text(angle = 90, vjust = 0.75,hjust = 0.75, size=8)) +  scale_x_discrete(guide = guide_axis(n.dodge = 2))+ xlab(""Tumor Samples Expression data"") + labs(title=paste(gene,""Tumor Samples Expression Data"")))"
"0","  dev.off() "
"0","   #Creates a box plot of y-linked gene expression data of all tumor adjacent samples"
"0","  pdf(paste(""~/Desktop/ResearchProjects/LiverCancerProject/DEA_removed_samples/newFigures/y_linked_gene_adjacent_expression/"",gene,""_tumor_adjacent_expression_data.pdf"",sep=""""), width=12, height=12)"
"0","  print(ggplot(Adjacent_expressionData, aes(x=reorder(Names,SexViralNumeric),y= log(as.numeric(Expression)+0.01,10),fill=SexViralNumeric)) + geom_bar(stat=""identity"", colour=""black"") +theme(axis.text.x = element_text(angle = 90, vjust = 0.75,hjust = 0.75, size=8)) +  scale_x_discrete(guide = guide_axis(n.dodge = 2))+ xlab(""Adjacent Samples Expression data"") + labs(title=paste(gene,""Tumor Adjacent Samples Expression Data"")))"
"0","  dev.off() "
"0","}"
