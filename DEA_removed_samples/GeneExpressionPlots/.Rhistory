MaleAdj_expressionData[50]
MaleAdj_expressionData[51]
MaleAdj_expressionData[52]
MaleAdj_expressionData[53]
MaleAdj_expressionData[54]
MaleAdj_expressionData[55]
MaleAdj_expressionData[56]
MaleAdj_expressionData[57]
MaleAdj_expressionData[58]
MaleAdj_expressionData[59]
MaleAdj_expressionData[60]
MaleAdj_expressionData[61]
MaleAdj_expressionData[62]
MaleAdj_expressionData[63]
MaleAdj_expressionData[64]
MaleAdj_expressionData[65]
MaleAdj_expressionData[66]
MaleAdj_expressionData[67]
MaleAdj_expressionData[68]
MaleAdj_expressionData[69]
MaleAdj_expressionData[70]
MaleAdj_expressionData[71]
MaleAdj_expressionData[72]
MaleAdj_expressionData[73]
MaleAdj_expressionData[74]
MaleAdj_expressionData[75]
MaleAdj_expressionData[76]
MaleAdj_expressionData[77]
MaleAdj_expressionData[78]
MaleAdj_expressionData[79]
MaleAdj_expressionData[80]
MaleAdj_expressionData[81]
MaleAdj_expressionData[82]
MaleAdj_expressionData[83]
MaleAdj_expressionData[84]
MaleAdj_expressionData[85]
MaleAdj_expressionData[86]
MaleAdj_expressionData[87]
MaleAdj_expressionData[88]
MaleAdj_expressionData[89]
MaleAdj_expressionData[90]
View(MaleAdj_expressionData)
MaleAdj_expressionData[50]
MaleAdj_expressionData[65]
View(Tumor_expressionData)
Tumor_expressionData[60]
Tumor_expressionData[70]
Tumor_expressionData[80]
Tumor_expressionData[90]
Tumor_expressionData[100]
Tumor_expressionData[95]
Tumor_expressionData[96]
Tumor_expressionData[97]
Tumor_expressionData[98]
knitr::opts_chunk$set(echo = TRUE)
library(RColorBrewer)
library(matrixStats)
library(ggplot2)
library(edgeR)
library(DESeq2)
library(limma)
library(doParallel)
library(variancePartition)
library(org.Hs.eg.db)
library(clusterProfiler)
library(GOSemSim)
library(biomaRt)
library(UpSetR)
library(VennDiagram)
library(ggrepel)
library(dplyr)
library(stringr)
library(forcats)
library(stats)
library(gridExtra)
library(tidyverse)
setwd('~/Desktop/ResearchProjects/LiverCancer/DEA_removed_samples/GeneExpressionPlots')
#reading in tumor expression data for DDX3Y, EIF1AY, TXLNGY, KDM5D, TSPY1
TumorAdj_expressionData <- read.csv("~/Desktop/ResearchProjects/LiverCancer/DEA_removed_samples/GeneExpressionPlots/data/TumorAdjExpressionData5genes.csv",row.names=1,header=TRUE, sep=",")
#removing expression data for TSPY1
TumorAdj_expressionData<- TumorAdj_expressionData[-5,]
#creating a vector for the x axis of our plot
geneXaxis<- 1:4
#reading in tumor expression data for DDX3Y, EIF1AY, TXLNGY, KDM5D, TSPY1
Tumor_expressionData <- read.csv("~/Desktop/ResearchProjects/LiverCancer/DEA_removed_samples/GeneExpressionPlots/data/TumorExpressionData5genes.csv",row.names=1,header=TRUE, sep=",")
#removing expression data for TSPY1
Tumor_expressionData<- Tumor_expressionData[-5,]
#creating a vector for the x axis of our plot
geneXaxis<- 1:4
TumorAdj_expressionData<- t(TumorAdj_expressionData)
TumorAdj_expressionData<- as.data.frame(TumorAdj_expressionData)
MaleAdj_expressionData<- TumorAdj_expressionData[grepl("XY",rownames(TumorAdj_expressionData),fixed=TRUE),]
MaleAdj_expressionData<- t(MaleAdj_expressionData)
MaleAdj_expressionData<-as.data.frame(MaleAdj_expressionData)
TumorAdj_expressionData<- t(TumorAdj_expressionData)
TumorAdj_expressionData<- as.data.frame(TumorAdj_expressionData)
#creating data frame with sample 3 TumorAdj expression data
dataFiltered<-  as.data.frame(cbind(genes=rownames(MaleAdj_expressionData),Expression=MaleAdj_expressionData[,2],Names=c("Normal","Normal","Normal","Normal")))
rownames(dataFiltered)<-1:4
#creating data frame with sample 3 Tumor expression
newRow<- as.data.frame(cbind(genes=rownames(Tumor_expressionData),Expression=Tumor_expressionData[,2],Names=c("Tumor","Tumor","Tumor","Tumor")))
rownames(newRow)<-1:4
#combining sample 3 Tumor with sample 3 TumorAdj
dataFiltered<- rbind(dataFiltered,newRow)
#changing Expression values to be numeric
dataFiltered$Expression<- as.numeric(dataFiltered$Expression)
#plotting all samples with FPKM under 100
expressionPlot<- ggplot(data=dataFiltered, aes(x=genes,y=Expression,group=Names)) +  geom_line(aes(color=Names))+
geom_point(aes(color=Names))+ ggtitle("Male Tumor Samples w/ FPKM Expression under 100") + ylab("FPKM") +xlab("")+ labs(color = "Samples")
expressionPlot
#creating data frame with sample 169 TumorAdj expression data
dataFiltered<-  as.data.frame(cbind(genes=rownames(MaleAdj_expressionData),Expression=MaleAdj_expressionData[,65],Names=c("Normal","Normal","Normal","Normal")))
rownames(dataFiltered)<-1:4
#creating data frame with sample 169 Tumor expression
newRow<- as.data.frame(cbind(genes=rownames(Tumor_expressionData),Expression=Tumor_expressionData[,98],Names=c("Tumor","Tumor","Tumor","Tumor")))
rownames(newRow)<-1:4
#changing Expression values to be numeric
dataFiltered$Expression<- as.numeric(dataFiltered$Expression)
#plotting all samples with FPKM under 100
expressionPlot<- ggplot(data=dataFiltered, aes(x=genes,y=Expression,group=Names)) +  geom_line(aes(color=Names))+
geom_point(aes(color=Names))+ ggtitle("Male Tumor Samples w/ FPKM Expression under 100") + ylab("FPKM") +xlab("")+ labs(color = "Samples")
expressionPlot
knitr::opts_chunk$set(echo = TRUE)
library(RColorBrewer)
library(matrixStats)
library(ggplot2)
library(edgeR)
library(DESeq2)
library(limma)
library(doParallel)
library(variancePartition)
library(org.Hs.eg.db)
library(clusterProfiler)
library(GOSemSim)
library(biomaRt)
library(UpSetR)
library(VennDiagram)
library(ggrepel)
library(dplyr)
library(stringr)
library(forcats)
library(stats)
library(gridExtra)
library(tidyverse)
setwd('~/Desktop/ResearchProjects/LiverCancer/DEA_removed_samples/GeneExpressionPlots')
#reading in tumor expression data for DDX3Y, EIF1AY, TXLNGY, KDM5D, TSPY1
TumorAdj_expressionData <- read.csv("~/Desktop/ResearchProjects/LiverCancer/DEA_removed_samples/GeneExpressionPlots/data/TumorAdjExpressionData5genes.csv",row.names=1,header=TRUE, sep=",")
#removing expression data for TSPY1
TumorAdj_expressionData<- TumorAdj_expressionData[-5,]
#creating a vector for the x axis of our plot
geneXaxis<- 1:4
#reading in tumor expression data for DDX3Y, EIF1AY, TXLNGY, KDM5D, TSPY1
Tumor_expressionData <- read.csv("~/Desktop/ResearchProjects/LiverCancer/DEA_removed_samples/GeneExpressionPlots/data/TumorExpressionData5genes.csv",row.names=1,header=TRUE, sep=",")
#removing expression data for TSPY1
Tumor_expressionData<- Tumor_expressionData[-5,]
#creating a vector for the x axis of our plot
geneXaxis<- 1:4
TumorAdj_expressionData<- t(TumorAdj_expressionData)
TumorAdj_expressionData<- as.data.frame(TumorAdj_expressionData)
MaleAdj_expressionData<- TumorAdj_expressionData[grepl("XY",rownames(TumorAdj_expressionData),fixed=TRUE),]
MaleAdj_expressionData<- t(MaleAdj_expressionData)
MaleAdj_expressionData<-as.data.frame(MaleAdj_expressionData)
TumorAdj_expressionData<- t(TumorAdj_expressionData)
TumorAdj_expressionData<- as.data.frame(TumorAdj_expressionData)
#creating data frame with sample 3 TumorAdj expression data
dataFiltered<-  as.data.frame(cbind(genes=rownames(MaleAdj_expressionData),Expression=MaleAdj_expressionData[,2],Names=c("Normal","Normal","Normal","Normal")))
rownames(dataFiltered)<-1:4
#creating data frame with sample 3 Tumor expression
newRow<- as.data.frame(cbind(genes=rownames(Tumor_expressionData),Expression=Tumor_expressionData[,2],Names=c("Tumor","Tumor","Tumor","Tumor")))
rownames(newRow)<-1:4
#combining sample 3 Tumor with sample 3 TumorAdj
dataFiltered<- rbind(dataFiltered,newRow)
#changing Expression values to be numeric
dataFiltered$Expression<- as.numeric(dataFiltered$Expression)
#plotting all samples with FPKM under 100
expressionPlot<- ggplot(data=dataFiltered, aes(x=genes,y=Expression,group=Names)) +  geom_line(aes(color=Names))+
geom_point(aes(color=Names))+ ggtitle("Male Tumor Samples w/ FPKM Expression under 100") + ylab("FPKM") +xlab("")+ labs(color = "Samples")
expressionPlot
#creating data frame with sample 169 TumorAdj expression data
dataFiltered<-  as.data.frame(cbind(genes=rownames(MaleAdj_expressionData),Expression=MaleAdj_expressionData[,65],Names=c("Normal","Normal","Normal","Normal")))
rownames(dataFiltered)<-1:4
#creating data frame with sample 169 Tumor expression
newRow<- as.data.frame(cbind(genes=rownames(Tumor_expressionData),Expression=Tumor_expressionData[,98],Names=c("Tumor","Tumor","Tumor","Tumor")))
rownames(newRow)<-1:4
#changing Expression values to be numeric
dataFiltered$Expression<- as.numeric(dataFiltered$Expression)
#plotting all samples with FPKM under 100
expressionPlot<- ggplot(data=dataFiltered, aes(x=genes,y=Expression,group=Names)) +  geom_line(aes(color=Names))+
geom_point(aes(color=Names))+ ggtitle("Male Tumor Samples w/ FPKM Expression under 100") + ylab("FPKM") +xlab("")+ labs(color = "Samples")
expressionPlot
#creating data frame with sample 169 TumorAdj expression data
dataFiltered<-  as.data.frame(cbind(genes=rownames(MaleAdj_expressionData),Expression=MaleAdj_expressionData[,65],Names=c("Normal","Normal","Normal","Normal")))
rownames(dataFiltered)<-1:4
#creating data frame with sample 169 Tumor expression
newRow<- as.data.frame(cbind(genes=rownames(Tumor_expressionData),Expression=Tumor_expressionData[,98],Names=c("Tumor","Tumor","Tumor","Tumor")))
rownames(newRow)<-1:4
#combining sample 169 Tumor with sample 169 TumorAdj
dataFiltered<- rbind(dataFiltered,newRow)
#changing Expression values to be numeric
dataFiltered$Expression<- as.numeric(dataFiltered$Expression)
#plotting all samples with FPKM under 100
expressionPlot<- ggplot(data=dataFiltered, aes(x=genes,y=Expression,group=Names)) +  geom_line(aes(color=Names))+
geom_point(aes(color=Names))+ ggtitle("Male Tumor Samples w/ FPKM Expression under 100") + ylab("FPKM") +xlab("")+ labs(color = "Samples")
expressionPlot
knitr::opts_chunk$set(echo = TRUE)
library(RColorBrewer)
library(matrixStats)
library(ggplot2)
library(edgeR)
library(DESeq2)
library(limma)
library(doParallel)
library(variancePartition)
library(org.Hs.eg.db)
library(clusterProfiler)
library(GOSemSim)
library(biomaRt)
library(UpSetR)
library(VennDiagram)
library(ggrepel)
library(dplyr)
library(stringr)
library(forcats)
library(stats)
library(gridExtra)
library(tidyverse)
setwd('~/Desktop/ResearchProjects/LiverCancer/DEA_removed_samples/GeneExpressionPlots')
#reading in tumor expression data for DDX3Y, EIF1AY, TXLNGY, KDM5D, TSPY1
TumorAdj_expressionData <- read.csv("~/Desktop/ResearchProjects/LiverCancer/DEA_removed_samples/GeneExpressionPlots/data/TumorAdjExpressionData5genes.csv",row.names=1,header=TRUE, sep=",")
#removing expression data for TSPY1
TumorAdj_expressionData<- TumorAdj_expressionData[-5,]
#creating a vector for the x axis of our plot
geneXaxis<- 1:4
#reading in tumor expression data for DDX3Y, EIF1AY, TXLNGY, KDM5D, TSPY1
Tumor_expressionData <- read.csv("~/Desktop/ResearchProjects/LiverCancer/DEA_removed_samples/GeneExpressionPlots/data/TumorExpressionData5genes.csv",row.names=1,header=TRUE, sep=",")
#removing expression data for TSPY1
Tumor_expressionData<- Tumor_expressionData[-5,]
#creating a vector for the x axis of our plot
geneXaxis<- 1:4
TumorAdj_expressionData<- t(TumorAdj_expressionData)
TumorAdj_expressionData<- as.data.frame(TumorAdj_expressionData)
MaleAdj_expressionData<- TumorAdj_expressionData[grepl("XY",rownames(TumorAdj_expressionData),fixed=TRUE),]
MaleAdj_expressionData<- t(MaleAdj_expressionData)
MaleAdj_expressionData<-as.data.frame(MaleAdj_expressionData)
TumorAdj_expressionData<- t(TumorAdj_expressionData)
TumorAdj_expressionData<- as.data.frame(TumorAdj_expressionData)
#creating data frame with sample 3 TumorAdj expression data
dataFiltered<-  as.data.frame(cbind(genes=rownames(MaleAdj_expressionData),Expression=MaleAdj_expressionData[,2],Names=c("Normal","Normal","Normal","Normal")))
rownames(dataFiltered)<-1:4
#creating data frame with sample 3 Tumor expression
newRow<- as.data.frame(cbind(genes=rownames(Tumor_expressionData),Expression=Tumor_expressionData[,2],Names=c("Tumor","Tumor","Tumor","Tumor")))
rownames(newRow)<-1:4
#combining sample 3 Tumor with sample 3 TumorAdj
dataFiltered<- rbind(dataFiltered,newRow)
#changing Expression values to be numeric
dataFiltered$Expression<- as.numeric(dataFiltered$Expression)
#plotting all samples with FPKM under 100
expressionPlot<- ggplot(data=dataFiltered, aes(x=genes,y=Expression,group=Names)) +  geom_line(aes(color=Names))+
geom_point(aes(color=Names))+ ggtitle("Sample 3 Gene Expression") + ylab("FPKM") +xlab("")+ labs(color = "Samples")
expressionPlot
#creating data frame with sample 169 TumorAdj expression data
dataFiltered<-  as.data.frame(cbind(genes=rownames(MaleAdj_expressionData),Expression=MaleAdj_expressionData[,65],Names=c("Normal","Normal","Normal","Normal")))
rownames(dataFiltered)<-1:4
#creating data frame with sample 169 Tumor expression
newRow<- as.data.frame(cbind(genes=rownames(Tumor_expressionData),Expression=Tumor_expressionData[,98],Names=c("Tumor","Tumor","Tumor","Tumor")))
rownames(newRow)<-1:4
#combining sample 169 Tumor with sample 169 TumorAdj
dataFiltered<- rbind(dataFiltered,newRow)
#changing Expression values to be numeric
dataFiltered$Expression<- as.numeric(dataFiltered$Expression)
#plotting all samples with FPKM under 100
expressionPlot<- ggplot(data=dataFiltered, aes(x=genes,y=Expression,group=Names)) +  geom_line(aes(color=Names))+
geom_point(aes(color=Names))+ ggtitle("Sample 169 Gene Expression") + ylab("FPKM") +xlab("")+ labs(color = "Samples")
expressionPlot
#reading in tumor expression data for DDX3Y, EIF1AY, TXLNGY, KDM5D, TSPY1
TumorAdj_expressionData <- read.csv("~/Desktop/ResearchProjects/LiverCancer/DEA_removed_samples/GeneExpressionPlots/data/TumorAdjExpressionData5genes.csv",row.names=1,header=TRUE, sep=",")
#reading in tumor expression data for DDX3Y, EIF1AY, TXLNGY, KDM5D, TSPY1
TumorAdj_expressionData <- read.csv("~/Desktop/ResearchProjects/LiverCancer/DEA_removed_samples/GeneExpressionPlots/data/TumorAdjExpressionData5genes.csv",row.names=1,header=TRUE, sep=",")
View(TumorAdj_expressionData)
knitr::opts_chunk$set(echo = TRUE)
library(RColorBrewer)
library(matrixStats)
library(ggplot2)
library(edgeR)
library(DESeq2)
library(limma)
library(doParallel)
library(variancePartition)
library(org.Hs.eg.db)
library(clusterProfiler)
library(GOSemSim)
library(biomaRt)
library(UpSetR)
library(VennDiagram)
library(ggrepel)
library(dplyr)
library(stringr)
library(forcats)
library(stats)
library(gridExtra)
library(tidyverse)
setwd('~/Desktop/ResearchProjects/LiverCancer/DEA_removed_samples/GeneExpressionPlots')
#reading in tumor expression data for DDX3Y, EIF1AY, TXLNGY, KDM5D, TSPY1
TumorAdj_expressionData <- read.csv("~/Desktop/ResearchProjects/LiverCancer/DEA_removed_samples/GeneExpressionPlots/data/TumorAdjExpressionData5genes.csv",row.names=1,header=TRUE, sep=",")
#removing expression data for TSPY1
TumorAdj_expressionData<- TumorAdj_expressionData[-5,]
#creating a vector for the x axis of our plot
geneXaxis<- 1:4
#reading in tumor expression data for DDX3Y, EIF1AY, TXLNGY, KDM5D, TSPY1
Tumor_expressionData <- read.csv("~/Desktop/ResearchProjects/LiverCancer/DEA_removed_samples/GeneExpressionPlots/data/TumorExpressionData5genes.csv",row.names=1,header=TRUE, sep=",")
#removing expression data for TSPY1
Tumor_expressionData<- Tumor_expressionData[-5,]
#creating a vector for the x axis of our plot
geneXaxis<- 1:4
TumorAdj_expressionData<- t(TumorAdj_expressionData)
TumorAdj_expressionData<- as.data.frame(TumorAdj_expressionData)
MaleAdj_expressionData<- TumorAdj_expressionData[grepl("XY",rownames(TumorAdj_expressionData),fixed=TRUE),]
MaleAdj_expressionData<- t(MaleAdj_expressionData)
MaleAdj_expressionData<-as.data.frame(MaleAdj_expressionData)
TumorAdj_expressionData<- t(TumorAdj_expressionData)
TumorAdj_expressionData<- as.data.frame(TumorAdj_expressionData)
#creating data frame with sample 3 TumorAdj expression data
dataFiltered<-  as.data.frame(cbind(genes=rownames(MaleAdj_expressionData),Expression=MaleAdj_expressionData[,2],Names=c("Normal","Normal","Normal","Normal")))
rownames(dataFiltered)<-1:4
#creating data frame with sample 3 Tumor expression
newRow<- as.data.frame(cbind(genes=rownames(Tumor_expressionData),Expression=Tumor_expressionData[,2],Names=c("Tumor","Tumor","Tumor","Tumor")))
rownames(newRow)<-1:4
#combining sample 3 Tumor with sample 3 TumorAdj
dataFiltered<- rbind(dataFiltered,newRow)
#changing Expression values to be numeric
dataFiltered$Expression<- as.numeric(dataFiltered$Expression)
#plotting all samples with FPKM under 100
expressionPlot<- ggplot(data=dataFiltered, aes(x=genes,y=Expression,group=Names)) +  geom_line(aes(color=Names))+
geom_point(aes(color=Names))+ ggtitle("Sample 3 Gene Expression") + ylab("FPKM") +xlab("")+ labs(color = "Samples")
expressionPlot
pdf("~/Desktop/ResearchProjects/LiverCancer/DEA_removed_samples/newFigures/FPKM_sampleNamesPlots/Sample003GeneExpression.pdf", width=12, height=12)
#plotting all samples with FPKM under 100
expressionPlot<- ggplot(data=dataFiltered, aes(x=genes,y=Expression,group=Names)) +  geom_line(aes(color=Names))+
geom_point(aes(color=Names))+ ggtitle("Sample 3 Gene Expression") + ylab("FPKM") +xlab("")+ labs(color = "Samples")
expressionPlot
#creating data frame with sample 169 TumorAdj expression data
dataFiltered<-  as.data.frame(cbind(genes=rownames(MaleAdj_expressionData),Expression=MaleAdj_expressionData[,65],Names=c("Normal","Normal","Normal","Normal")))
rownames(dataFiltered)<-1:4
#creating data frame with sample 169 Tumor expression
newRow<- as.data.frame(cbind(genes=rownames(Tumor_expressionData),Expression=Tumor_expressionData[,98],Names=c("Tumor","Tumor","Tumor","Tumor")))
rownames(newRow)<-1:4
#combining sample 169 Tumor with sample 169 TumorAdj
dataFiltered<- rbind(dataFiltered,newRow)
#changing Expression values to be numeric
dataFiltered$Expression<- as.numeric(dataFiltered$Expression)
#plotting all samples with FPKM under 100
expressionPlot<- ggplot(data=dataFiltered, aes(x=genes,y=Expression,group=Names)) +  geom_line(aes(color=Names))+
geom_point(aes(color=Names))+ ggtitle("Sample 169 Gene Expression") + ylab("FPKM") +xlab("")+ labs(color = "Samples")
expressionPlot
knitr::opts_chunk$set(echo = TRUE)
library(RColorBrewer)
library(matrixStats)
library(ggplot2)
library(edgeR)
library(DESeq2)
library(limma)
library(doParallel)
library(variancePartition)
library(org.Hs.eg.db)
library(clusterProfiler)
library(GOSemSim)
library(biomaRt)
library(UpSetR)
library(VennDiagram)
library(ggrepel)
library(dplyr)
library(stringr)
library(forcats)
library(stats)
library(gridExtra)
library(tidyverse)
setwd('~/Desktop/ResearchProjects/LiverCancer/DEA_removed_samples/GeneExpressionPlots')
#reading in tumor expression data for DDX3Y, EIF1AY, TXLNGY, KDM5D, TSPY1
TumorAdj_expressionData <- read.csv("~/Desktop/ResearchProjects/LiverCancer/DEA_removed_samples/GeneExpressionPlots/data/TumorAdjExpressionData5genes.csv",row.names=1,header=TRUE, sep=",")
#removing expression data for TSPY1
TumorAdj_expressionData<- TumorAdj_expressionData[-5,]
#creating a vector for the x axis of our plot
geneXaxis<- 1:4
#reading in tumor expression data for DDX3Y, EIF1AY, TXLNGY, KDM5D, TSPY1
Tumor_expressionData <- read.csv("~/Desktop/ResearchProjects/LiverCancer/DEA_removed_samples/GeneExpressionPlots/data/TumorExpressionData5genes.csv",row.names=1,header=TRUE, sep=",")
#removing expression data for TSPY1
Tumor_expressionData<- Tumor_expressionData[-5,]
#creating a vector for the x axis of our plot
geneXaxis<- 1:4
TumorAdj_expressionData<- t(TumorAdj_expressionData)
TumorAdj_expressionData<- as.data.frame(TumorAdj_expressionData)
MaleAdj_expressionData<- TumorAdj_expressionData[grepl("XY",rownames(TumorAdj_expressionData),fixed=TRUE),]
MaleAdj_expressionData<- t(MaleAdj_expressionData)
MaleAdj_expressionData<-as.data.frame(MaleAdj_expressionData)
TumorAdj_expressionData<- t(TumorAdj_expressionData)
TumorAdj_expressionData<- as.data.frame(TumorAdj_expressionData)
#creating data frame with sample 3 TumorAdj expression data
dataFiltered<-  as.data.frame(cbind(genes=rownames(MaleAdj_expressionData),Expression=MaleAdj_expressionData[,2],Names=c("Normal","Normal","Normal","Normal")))
rownames(dataFiltered)<-1:4
#creating data frame with sample 3 Tumor expression
newRow<- as.data.frame(cbind(genes=rownames(Tumor_expressionData),Expression=Tumor_expressionData[,2],Names=c("Tumor","Tumor","Tumor","Tumor")))
rownames(newRow)<-1:4
#combining sample 3 Tumor with sample 3 TumorAdj
dataFiltered<- rbind(dataFiltered,newRow)
#changing Expression values to be numeric
dataFiltered$Expression<- as.numeric(dataFiltered$Expression)
#plotting all samples with FPKM under 100
expressionPlot<- ggplot(data=dataFiltered, aes(x=genes,y=Expression,group=Names)) +  geom_line(aes(color=Names))+
geom_point(aes(color=Names))+ ggtitle("Sample 3 Gene Expression") + ylab("FPKM") +xlab("")+ labs(color = "Samples")
expressionPlot
pdf("~/Desktop/ResearchProjects/LiverCancer/DEA_removed_samples/newFigures/FPKM_sampleNamesPlots/Sample003GeneExpression.pdf", width=12, height=12)
#plotting all samples with FPKM under 100
expressionPlot<- ggplot(data=dataFiltered, aes(x=genes,y=Expression,group=Names)) +  geom_line(aes(color=Names))+
geom_point(aes(color=Names))+ ggtitle("Sample 3 Gene Expression") + ylab("FPKM") +xlab("")+ labs(color = "Samples")
expressionPlot
dev.off()
#creating data frame with sample 169 TumorAdj expression data
dataFiltered<-  as.data.frame(cbind(genes=rownames(MaleAdj_expressionData),Expression=MaleAdj_expressionData[,65],Names=c("Normal","Normal","Normal","Normal")))
rownames(dataFiltered)<-1:4
#creating data frame with sample 169 Tumor expression
newRow<- as.data.frame(cbind(genes=rownames(Tumor_expressionData),Expression=Tumor_expressionData[,98],Names=c("Tumor","Tumor","Tumor","Tumor")))
rownames(newRow)<-1:4
#combining sample 169 Tumor with sample 169 TumorAdj
dataFiltered<- rbind(dataFiltered,newRow)
#changing Expression values to be numeric
dataFiltered$Expression<- as.numeric(dataFiltered$Expression)
#plotting all samples with FPKM under 100
expressionPlot<- ggplot(data=dataFiltered, aes(x=genes,y=Expression,group=Names)) +  geom_line(aes(color=Names))+
geom_point(aes(color=Names))+ ggtitle("Sample 169 Gene Expression") + ylab("FPKM") +xlab("")+ labs(color = "Samples")
expressionPlot
knitr::opts_chunk$set(echo = TRUE)
library(RColorBrewer)
library(matrixStats)
library(ggplot2)
library(edgeR)
library(DESeq2)
library(limma)
library(doParallel)
library(variancePartition)
library(org.Hs.eg.db)
library(clusterProfiler)
library(GOSemSim)
library(biomaRt)
library(UpSetR)
library(VennDiagram)
library(ggrepel)
library(dplyr)
library(stringr)
library(forcats)
library(stats)
library(gridExtra)
library(tidyverse)
setwd('~/Desktop/ResearchProjects/LiverCancer/DEA_removed_samples/GeneExpressionPlots')
#reading in tumor expression data for DDX3Y, EIF1AY, TXLNGY, KDM5D, TSPY1
TumorAdj_expressionData <- read.csv("~/Desktop/ResearchProjects/LiverCancer/DEA_removed_samples/GeneExpressionPlots/data/TumorAdjExpressionData5genes.csv",row.names=1,header=TRUE, sep=",")
#removing expression data for TSPY1
TumorAdj_expressionData<- TumorAdj_expressionData[-5,]
#creating a vector for the x axis of our plot
geneXaxis<- 1:4
#reading in tumor expression data for DDX3Y, EIF1AY, TXLNGY, KDM5D, TSPY1
Tumor_expressionData <- read.csv("~/Desktop/ResearchProjects/LiverCancer/DEA_removed_samples/GeneExpressionPlots/data/TumorExpressionData5genes.csv",row.names=1,header=TRUE, sep=",")
#removing expression data for TSPY1
Tumor_expressionData<- Tumor_expressionData[-5,]
#creating a vector for the x axis of our plot
geneXaxis<- 1:4
TumorAdj_expressionData<- t(TumorAdj_expressionData)
TumorAdj_expressionData<- as.data.frame(TumorAdj_expressionData)
MaleAdj_expressionData<- TumorAdj_expressionData[grepl("XY",rownames(TumorAdj_expressionData),fixed=TRUE),]
MaleAdj_expressionData<- t(MaleAdj_expressionData)
MaleAdj_expressionData<-as.data.frame(MaleAdj_expressionData)
TumorAdj_expressionData<- t(TumorAdj_expressionData)
TumorAdj_expressionData<- as.data.frame(TumorAdj_expressionData)
#creating data frame with sample 3 TumorAdj expression data
dataFiltered<-  as.data.frame(cbind(genes=rownames(MaleAdj_expressionData),Expression=MaleAdj_expressionData[,2],Names=c("Normal","Normal","Normal","Normal")))
rownames(dataFiltered)<-1:4
#creating data frame with sample 3 Tumor expression
newRow<- as.data.frame(cbind(genes=rownames(Tumor_expressionData),Expression=Tumor_expressionData[,2],Names=c("Tumor","Tumor","Tumor","Tumor")))
rownames(newRow)<-1:4
#combining sample 3 Tumor with sample 3 TumorAdj
dataFiltered<- rbind(dataFiltered,newRow)
#changing Expression values to be numeric
dataFiltered$Expression<- as.numeric(dataFiltered$Expression)
#plotting all samples with FPKM under 100
expressionPlot<- ggplot(data=dataFiltered, aes(x=genes,y=Expression,group=Names)) +  geom_line(aes(color=Names))+
geom_point(aes(color=Names))+ ggtitle("Sample 3 Gene Expression") + ylab("FPKM") +xlab("")+ labs(color = "Samples")
expressionPlot
pdf("~/Desktop/ResearchProjects/LiverCancer/DEA_removed_samples/newFigures/FPKM_sampleNamesPlots/Sample003GeneExpression.pdf", width=12, height=12)
#plotting all samples with FPKM under 100
expressionPlot<- ggplot(data=dataFiltered, aes(x=genes,y=Expression,group=Names)) +  geom_line(aes(color=Names))+
geom_point(aes(color=Names))+ ggtitle("Sample 3 Gene Expression") + ylab("FPKM") +xlab("")+ labs(color = "Samples")
expressionPlot
dev.off()
#creating data frame with sample 169 TumorAdj expression data
dataFiltered<-  as.data.frame(cbind(genes=rownames(MaleAdj_expressionData),Expression=MaleAdj_expressionData[,65],Names=c("Normal","Normal","Normal","Normal")))
rownames(dataFiltered)<-1:4
#creating data frame with sample 169 Tumor expression
newRow<- as.data.frame(cbind(genes=rownames(Tumor_expressionData),Expression=Tumor_expressionData[,98],Names=c("Tumor","Tumor","Tumor","Tumor")))
rownames(newRow)<-1:4
#combining sample 169 Tumor with sample 169 TumorAdj
dataFiltered<- rbind(dataFiltered,newRow)
#changing Expression values to be numeric
dataFiltered$Expression<- as.numeric(dataFiltered$Expression)
#plotting gene expression sample 169
expressionPlot<- ggplot(data=dataFiltered, aes(x=genes,y=Expression,group=Names)) +  geom_line(aes(color=Names))+
geom_point(aes(color=Names))+ ggtitle("Sample 169 Gene Expression") + ylab("FPKM") +xlab("")+ labs(color = "Samples")
expressionPlot
pdf("~/Desktop/ResearchProjects/LiverCancer/DEA_removed_samples/newFigures/FPKM_sampleNamesPlots/Sample169GeneExpression.pdf", width=12, height=12)
#plotting gene expression sample 169
expressionPlot<- ggplot(data=dataFiltered, aes(x=genes,y=Expression,group=Names)) +  geom_line(aes(color=Names))+
geom_point(aes(color=Names))+ ggtitle("Sample 169 Gene Expression") + ylab("FPKM") +xlab("")+ labs(color = "Samples")
expressionPlot
dev.off()
