knitr::opts_chunk$set(echo = TRUE)
library(RColorBrewer)
library(matrixStats)
library(ggplot2)
library(edgeR)
library(DESeq2)
library(limma)
library(doParallel)
library(variancePartition)
library(org.Hs.eg.db)
library(clusterProfiler)
library(GOSemSim)
library(biomaRt)
library(UpSetR)
library(VennDiagram)
library(ggrepel)
library(dplyr)
library(stringr)
library(forcats)
library(stats)
library(gridExtra)
setwd('~/Desktop/Research Projects/Liver Cancer Project/DEA_removed_samples')
metadata <- read.table("~/Desktop/Research Projects/Liver Cancer Project/Metadata/metadata_for_de.csv", row.names=1,header=TRUE, sep=",") #changing the name of the file
tumorAdjacentExp <- read.table("~/Desktop/Research Projects/Liver Cancer Project/Metadata/japan_all_samples_salmon_expression_counts.txt", row.names = 1, header=TRUE) #changing the name of the file
colnames(tumorAdjacentExp) <- gsub("\\.", "-", colnames(tumorAdjacentExp)) #changing the column names
# Importing gene annotations
#genes <- read.table("gencode.v25.chr_patch_hapl_scaff.annotation.bed", header=FALSE, sep="\t")
genes <- read.table("~/Desktop/Research Projects/Liver Cancer Project/Metadata/gencodeTranscripts.txt", header=TRUE, sep="\t")
genes <- data.frame(genes)
tumorAdjacentExp <- tumorAdjacentExp[rownames(tumorAdjacentExp) %in% genes$GENEID ,]
genes <- genes[match(rownames(tumorAdjacentExp), genes$GENEID),]
# Calculating gene length, this is needed for calculating the FPKM values
genes$length <- with(genes, end - start)
# Removing Samples due to low quality
metadata <- metadata[!(metadata$ID == "RK023") , ]
metadata <- metadata[!(metadata$ID == "RK106") , ]
metadata <- metadata[!(metadata$ID == "RK113") , ]
metadata <- metadata[!(metadata$ID == "RK135") , ]
metadata <- metadata[!(metadata$ID == "RK105") , ]
metadata <- metadata[!(metadata$ID == "RK116") , ]
metadata <- metadata[!(metadata$ID == "RK066") , ]
metadata <- metadata[!(metadata$ID == "RK096") , ]
#Removing both and NBNC samples
metadata <- metadata[!(metadata$Virus_infection == "NBNC"), ]
metadata <- metadata[!(metadata$Virus_infection == "both"), ]
# Subsetting and ordering metadata to match the count matrix
tumorAdjacentExpSubset <- tumorAdjacentExp[,colnames(tumorAdjacentExp) %in% metadata$sampleid]
metadataSubset <- metadata[metadata$sampleid %in% colnames(tumorAdjacentExpSubset),]
metadataSubset <- metadataSubset[match(colnames(tumorAdjacentExpSubset), metadataSubset$sampleid),]
rownames(metadataSubset) <- metadataSubset$sampleid
# Adding tissue type, converting categorical variables to factors
metadataSubset$tumor <- as.numeric(grepl('tumor', metadataSubset$sampleid, ignore.case=T))
#Swapping lesion type for sample RK169
metadataSubset["RK169-tumor-XY","tumor"] <- 0
metadataSubset["RK169-adjacent-XY","tumor"] <- 1
#Changing rownames to match swapped lesion type
rownames(metadataSubset)[rownames(metadataSubset)=="RK169-tumor-XY"] <- "RK169_adjacent-XY"
rownames(metadataSubset)[rownames(metadataSubset)=="RK169-adjacent-XY"] <- "RK169_tumor-XY"
rownames(metadataSubset)[rownames(metadataSubset)=="RK169_adjacent-XY"] <- "RK169-adjacent-XY"
rownames(tumorAdjacentExpSubset)[rownames(tumorAdjacentExpSubset)=="RK169-tumor-XY"] <- "RK169_adjacent-XY"
rownames(tumorAdjacentExpSubset)[rownames(tumorAdjacentExpSubset)=="RK169-adjacent-XY"] <- "RK169_tumor-XY"
rownames(tumorAdjacentExpSubset)[rownames(tumorAdjacentExpSubset)=="RK169_adjacent-XY"] <- "RK169-adjacent-XY"
#Swapping lesion type for sample RK065
metadataSubset["RK065-tumor-XX","tumor"] <- 0
metadataSubset["RK065-adjacent-XX","tumor"] <- 1
#Changing rownames in metadata to match swapped lesion type
rownames(metadataSubset)[rownames(metadataSubset)=="RK065-tumor-XY"] <- "RK065_adjacent-XY"
rownames(metadataSubset)[rownames(metadataSubset)=="RK065-adjacent-XY"] <- "RK065_tumor-XY"
rownames(metadataSubset)[rownames(metadataSubset)=="RK065_adjacent-XY"] <- "RK065-adjacent-XY"
rownames(tumorAdjacentExpSubset)[rownames(tumorAdjacentExpSubset)=="RK065-tumor-XY"] <- "RK065_adjacent-XY"
rownames(tumorAdjacentExpSubset)[rownames(tumorAdjacentExpSubset)=="RK065-adjacent-XY"] <- "RK065_tumor-XY"
rownames(tumorAdjacentExpSubset)[rownames(tumorAdjacentExpSubset)=="RK065_adjacent-XY"] <- "RK065-adjacent-XY"
metadataSubset$gender_tissue <- paste(metadataSubset$Gender, metadataSubset$tumor, sep="_")
metadataSubset$gender_tissue_viral <- paste(metadataSubset$gender_tissue, metadataSubset$Virus_infection, sep="_")
metadataSubset$library_type <- metadataSubset$strandedness
metadataSubset$library_type <- factor(metadataSubset$library_type)
metadataSubset$tumor <- factor(metadataSubset$tumor)
metadataSubset$Ta <- factor(metadataSubset$Ta)
metadataSubset$Portal_vein_invasion <- factor(metadataSubset$Portal_vein_invasion)
metadataSubset$Hepatic_vein_invasion <- factor(metadataSubset$Hepatic_vein_invasion)
metadataSubset$Bile_duct_invasion <- factor(metadataSubset$Bile_duct_invasion)
metadataSubset$Liver_fibrosisc <- factor(metadataSubset$Liver_fibrosisc)
metadataSubset$Prognosis <- factor(metadataSubset$Prognosis)
#subset metadataSubset data frame by male samples
Male <- metadataSubset[grepl("XY",rownames(metadataSubset)),]
#subset metadataSubset data frame by male tumor samples
MaleTumor<-  Male[grepl("tumor",rownames(Male)),]
#subset metadataSubset by male adjacent samples
MaleAdjacent <- Male[grepl("adjacent", rownames(Male)),]
#subset metadataSubset data frame by female samples
Female <- metadataSubset[grepl("XX",rownames(metadataSubset)),]
#subset metadataSubset data frame female tumor samples
FemaleTumor <- Female[grepl("tumor",rownames(Female)),]
#subset metadataSubset data frame female tumor adjacent samples
FemaleAdjacent <- Female[grepl("adjacent", rownames(Female)),]
#subsetting age of male samples
MaleAge<- Male$Age
#subsetting age of female samples
FemaleAge<- Female$Age
#f test alpha=0.05
var.test(MaleAge, FemaleAge) #Fail to reject null no evidence variance different
#variances equal
#t test alpha=0.05
t.test(MaleAge,FemaleAge,var.equal=TRUE) #Reject null age of male significantly different than females
#means significantly different
#subsetting by tumor size in female tumor samples
FemaleSize <- FemaleTumor$Tumor_size_mm
#subsetting by tumor size in male tumor samples
MaleSize<- MaleTumor$Tumor_size_mm
#f test alpha=0.05
var.test(MaleSize, FemaleSize) #reject null variances significantly different
#variances unequal
#t test tumor size alpha=0.05
t.test(MaleSize,FemaleSize) #Do not reject null no evidence tumor size is different
#no significant difference
#subsetting overall survival month from male tumor sample
MaleSurvivalMonth<- MaleTumor$Overall_survival_month
#subsetting overall survival month from female tumor sample
FemaleSurvivalMonth<- FemaleTumor$Overall_survival_month
#f test overall survival month alpha=0.05
var.test(MaleSurvivalMonth, FemaleSurvivalMonth) #fail to reject null no evidence variances are different
#variances are equal
#t test overall survival month alpha=0.05
t.test(MaleSurvivalMonth, FemaleSurvivalMonth, var.equal = TRUE) #Reject null survival month significantly different
#significant difference
View(metadataSubset)
pwd()
wd()
ls
wd()
ls()
getwd()
knitr::opts_chunk$set(echo = TRUE)
library(RColorBrewer)
library(matrixStats)
library(ggplot2)
library(edgeR)
library(DESeq2)
library(limma)
library(doParallel)
library(variancePartition)
library(org.Hs.eg.db)
library(clusterProfiler)
library(GOSemSim)
library(biomaRt)
library(UpSetR)
library(VennDiagram)
library(ggrepel)
library(dplyr)
library(stringr)
library(forcats)
library(stats)
library(gridExtra)
setwd('~/Desktop/Research Projects/Liver Cancer Project/DEA_removed_samples')
metadata <- read.table("~/Desktop/Research Projects/Liver Cancer Project/Metadata/metadata_for_de.csv", row.names=1,header=TRUE, sep=",") #changing the name of the file
tumorAdjacentExp <- read.table("~/Desktop/Research Projects/Liver Cancer Project/Metadata/japan_all_samples_salmon_expression_counts.txt", row.names = 1, header=TRUE) #changing the name of the file
getwd()
knitr::opts_chunk$set(echo = TRUE)
library(RColorBrewer)
library(matrixStats)
library(ggplot2)
library(edgeR)
library(DESeq2)
library(limma)
library(doParallel)
library(variancePartition)
library(org.Hs.eg.db)
library(clusterProfiler)
library(GOSemSim)
library(biomaRt)
library(UpSetR)
library(VennDiagram)
library(ggrepel)
library(dplyr)
library(stringr)
library(forcats)
library(stats)
library(gridExtra)
metadata <- read.table("~/Desktop/Research Projects/Liver Cancer Project/Metadata/metadata_for_de.csv", row.names=1,header=TRUE, sep=",") #changing the name of the file
tumorAdjacentExp <- read.table("~/Desktop/Research Projects/Liver Cancer Project/Metadata/japan_all_samples_salmon_expression_counts.txt", row.names = 1, header=TRUE) #changing the name of the file
colnames(tumorAdjacentExp) <- gsub("\\.", "-", colnames(tumorAdjacentExp)) #changing the column names
# Importing gene annotations
#genes <- read.table("gencode.v25.chr_patch_hapl_scaff.annotation.bed", header=FALSE, sep="\t")
genes <- read.table("~/Desktop/Research Projects/Liver Cancer Project/Metadata/gencodeTranscripts.txt", header=TRUE, sep="\t")
genes <- data.frame(genes)
tumorAdjacentExp <- tumorAdjacentExp[rownames(tumorAdjacentExp) %in% genes$GENEID ,]
genes <- genes[match(rownames(tumorAdjacentExp), genes$GENEID),]
# Calculating gene length, this is needed for calculating the FPKM values
genes$length <- with(genes, end - start)
# Removing Samples due to low quality
metadata <- metadata[!(metadata$ID == "RK023") , ]
metadata <- metadata[!(metadata$ID == "RK106") , ]
metadata <- metadata[!(metadata$ID == "RK113") , ]
metadata <- metadata[!(metadata$ID == "RK135") , ]
metadata <- metadata[!(metadata$ID == "RK105") , ]
metadata <- metadata[!(metadata$ID == "RK116") , ]
metadata <- metadata[!(metadata$ID == "RK066") , ]
metadata <- metadata[!(metadata$ID == "RK096") , ]
#Removing both and NBNC samples
metadata <- metadata[!(metadata$Virus_infection == "NBNC"), ]
metadata <- metadata[!(metadata$Virus_infection == "both"), ]
# Subsetting and ordering metadata to match the count matrix
tumorAdjacentExpSubset <- tumorAdjacentExp[,colnames(tumorAdjacentExp) %in% metadata$sampleid]
metadataSubset <- metadata[metadata$sampleid %in% colnames(tumorAdjacentExpSubset),]
metadataSubset <- metadataSubset[match(colnames(tumorAdjacentExpSubset), metadataSubset$sampleid),]
rownames(metadataSubset) <- metadataSubset$sampleid
# Adding tissue type, converting categorical variables to factors
metadataSubset$tumor <- as.numeric(grepl('tumor', metadataSubset$sampleid, ignore.case=T))
#Swapping lesion type for sample RK169
metadataSubset["RK169-tumor-XY","tumor"] <- 0
metadataSubset["RK169-adjacent-XY","tumor"] <- 1
#Changing rownames to match swapped lesion type
rownames(metadataSubset)[rownames(metadataSubset)=="RK169-tumor-XY"] <- "RK169_adjacent-XY"
rownames(metadataSubset)[rownames(metadataSubset)=="RK169-adjacent-XY"] <- "RK169_tumor-XY"
rownames(metadataSubset)[rownames(metadataSubset)=="RK169_adjacent-XY"] <- "RK169-adjacent-XY"
rownames(tumorAdjacentExpSubset)[rownames(tumorAdjacentExpSubset)=="RK169-tumor-XY"] <- "RK169_adjacent-XY"
rownames(tumorAdjacentExpSubset)[rownames(tumorAdjacentExpSubset)=="RK169-adjacent-XY"] <- "RK169_tumor-XY"
rownames(tumorAdjacentExpSubset)[rownames(tumorAdjacentExpSubset)=="RK169_adjacent-XY"] <- "RK169-adjacent-XY"
#Swapping lesion type for sample RK065
metadataSubset["RK065-tumor-XX","tumor"] <- 0
metadataSubset["RK065-adjacent-XX","tumor"] <- 1
#Changing rownames in metadata to match swapped lesion type
rownames(metadataSubset)[rownames(metadataSubset)=="RK065-tumor-XY"] <- "RK065_adjacent-XY"
rownames(metadataSubset)[rownames(metadataSubset)=="RK065-adjacent-XY"] <- "RK065_tumor-XY"
rownames(metadataSubset)[rownames(metadataSubset)=="RK065_adjacent-XY"] <- "RK065-adjacent-XY"
rownames(tumorAdjacentExpSubset)[rownames(tumorAdjacentExpSubset)=="RK065-tumor-XY"] <- "RK065_adjacent-XY"
rownames(tumorAdjacentExpSubset)[rownames(tumorAdjacentExpSubset)=="RK065-adjacent-XY"] <- "RK065_tumor-XY"
rownames(tumorAdjacentExpSubset)[rownames(tumorAdjacentExpSubset)=="RK065_adjacent-XY"] <- "RK065-adjacent-XY"
metadataSubset$gender_tissue <- paste(metadataSubset$Gender, metadataSubset$tumor, sep="_")
metadataSubset$gender_tissue_viral <- paste(metadataSubset$gender_tissue, metadataSubset$Virus_infection, sep="_")
metadataSubset$library_type <- metadataSubset$strandedness
metadataSubset$library_type <- factor(metadataSubset$library_type)
metadataSubset$tumor <- factor(metadataSubset$tumor)
metadataSubset$Ta <- factor(metadataSubset$Ta)
metadataSubset$Portal_vein_invasion <- factor(metadataSubset$Portal_vein_invasion)
metadataSubset$Hepatic_vein_invasion <- factor(metadataSubset$Hepatic_vein_invasion)
metadataSubset$Bile_duct_invasion <- factor(metadataSubset$Bile_duct_invasion)
metadataSubset$Liver_fibrosisc <- factor(metadataSubset$Liver_fibrosisc)
metadataSubset$Prognosis <- factor(metadataSubset$Prognosis)
write.csv(x=metadataSubset,file="/data/metadataSubset.csv",row.names=FALSE)
metadata <- read.table("~/Desktop/Research Projects/Liver Cancer Project/Metadata/metadata_for_de.csv", row.names=1,header=TRUE, sep=",") #changing the name of the file
tumorAdjacentExp <- read.table("~/Desktop/Research Projects/Liver Cancer Project/Metadata/japan_all_samples_salmon_expression_counts.txt", row.names = 1, header=TRUE) #changing the name of the file
knitr::opts_chunk$set(echo = TRUE)
library(RColorBrewer)
library(matrixStats)
library(ggplot2)
library(edgeR)
library(DESeq2)
library(limma)
library(doParallel)
library(variancePartition)
library(org.Hs.eg.db)
library(clusterProfiler)
library(GOSemSim)
library(biomaRt)
library(UpSetR)
library(VennDiagram)
library(ggrepel)
library(dplyr)
library(stringr)
library(forcats)
library(stats)
library(gridExtra)
metadata <- read.table("~/Desktop/Research Projects/Liver Cancer Project/Metadata/metadata_for_de.csv", row.names=1,header=TRUE, sep=",") #changing the name of the file
tumorAdjacentExp <- read.table("~/Desktop/Research Projects/Liver Cancer Project/Metadata/japan_all_samples_salmon_expression_counts.txt", row.names = 1, header=TRUE) #changing the name of the file
colnames(tumorAdjacentExp) <- gsub("\\.", "-", colnames(tumorAdjacentExp)) #changing the column names
# Importing gene annotations
#genes <- read.table("gencode.v25.chr_patch_hapl_scaff.annotation.bed", header=FALSE, sep="\t")
genes <- read.table("~/Desktop/Research Projects/Liver Cancer Project/Metadata/gencodeTranscripts.txt", header=TRUE, sep="\t")
genes <- data.frame(genes)
tumorAdjacentExp <- tumorAdjacentExp[rownames(tumorAdjacentExp) %in% genes$GENEID ,]
genes <- genes[match(rownames(tumorAdjacentExp), genes$GENEID),]
# Calculating gene length, this is needed for calculating the FPKM values
genes$length <- with(genes, end - start)
# Removing Samples due to low quality
metadata <- metadata[!(metadata$ID == "RK023") , ]
metadata <- metadata[!(metadata$ID == "RK106") , ]
metadata <- metadata[!(metadata$ID == "RK113") , ]
metadata <- metadata[!(metadata$ID == "RK135") , ]
metadata <- metadata[!(metadata$ID == "RK105") , ]
metadata <- metadata[!(metadata$ID == "RK116") , ]
metadata <- metadata[!(metadata$ID == "RK066") , ]
metadata <- metadata[!(metadata$ID == "RK096") , ]
#Removing both and NBNC samples
metadata <- metadata[!(metadata$Virus_infection == "NBNC"), ]
metadata <- metadata[!(metadata$Virus_infection == "both"), ]
# Subsetting and ordering metadata to match the count matrix
tumorAdjacentExpSubset <- tumorAdjacentExp[,colnames(tumorAdjacentExp) %in% metadata$sampleid]
metadataSubset <- metadata[metadata$sampleid %in% colnames(tumorAdjacentExpSubset),]
metadataSubset <- metadataSubset[match(colnames(tumorAdjacentExpSubset), metadataSubset$sampleid),]
rownames(metadataSubset) <- metadataSubset$sampleid
# Adding tissue type, converting categorical variables to factors
metadataSubset$tumor <- as.numeric(grepl('tumor', metadataSubset$sampleid, ignore.case=T))
#Swapping lesion type for sample RK169
metadataSubset["RK169-tumor-XY","tumor"] <- 0
metadataSubset["RK169-adjacent-XY","tumor"] <- 1
#Changing rownames to match swapped lesion type
rownames(metadataSubset)[rownames(metadataSubset)=="RK169-tumor-XY"] <- "RK169_adjacent-XY"
rownames(metadataSubset)[rownames(metadataSubset)=="RK169-adjacent-XY"] <- "RK169_tumor-XY"
rownames(metadataSubset)[rownames(metadataSubset)=="RK169_adjacent-XY"] <- "RK169-adjacent-XY"
rownames(tumorAdjacentExpSubset)[rownames(tumorAdjacentExpSubset)=="RK169-tumor-XY"] <- "RK169_adjacent-XY"
rownames(tumorAdjacentExpSubset)[rownames(tumorAdjacentExpSubset)=="RK169-adjacent-XY"] <- "RK169_tumor-XY"
rownames(tumorAdjacentExpSubset)[rownames(tumorAdjacentExpSubset)=="RK169_adjacent-XY"] <- "RK169-adjacent-XY"
#Swapping lesion type for sample RK065
metadataSubset["RK065-tumor-XX","tumor"] <- 0
metadataSubset["RK065-adjacent-XX","tumor"] <- 1
#Changing rownames in metadata to match swapped lesion type
rownames(metadataSubset)[rownames(metadataSubset)=="RK065-tumor-XY"] <- "RK065_adjacent-XY"
rownames(metadataSubset)[rownames(metadataSubset)=="RK065-adjacent-XY"] <- "RK065_tumor-XY"
rownames(metadataSubset)[rownames(metadataSubset)=="RK065_adjacent-XY"] <- "RK065-adjacent-XY"
rownames(tumorAdjacentExpSubset)[rownames(tumorAdjacentExpSubset)=="RK065-tumor-XY"] <- "RK065_adjacent-XY"
rownames(tumorAdjacentExpSubset)[rownames(tumorAdjacentExpSubset)=="RK065-adjacent-XY"] <- "RK065_tumor-XY"
rownames(tumorAdjacentExpSubset)[rownames(tumorAdjacentExpSubset)=="RK065_adjacent-XY"] <- "RK065-adjacent-XY"
metadataSubset$gender_tissue <- paste(metadataSubset$Gender, metadataSubset$tumor, sep="_")
metadataSubset$gender_tissue_viral <- paste(metadataSubset$gender_tissue, metadataSubset$Virus_infection, sep="_")
metadataSubset$library_type <- metadataSubset$strandedness
metadataSubset$library_type <- factor(metadataSubset$library_type)
metadataSubset$tumor <- factor(metadataSubset$tumor)
metadataSubset$Ta <- factor(metadataSubset$Ta)
metadataSubset$Portal_vein_invasion <- factor(metadataSubset$Portal_vein_invasion)
metadataSubset$Hepatic_vein_invasion <- factor(metadataSubset$Hepatic_vein_invasion)
metadataSubset$Bile_duct_invasion <- factor(metadataSubset$Bile_duct_invasion)
metadataSubset$Liver_fibrosisc <- factor(metadataSubset$Liver_fibrosisc)
metadataSubset$Prognosis <- factor(metadataSubset$Prognosis)
write.csv(x=metadataSubset,file="~/Desktop/Research Projects/Liver Cancer Project/DEA_removed_samples/MedicalCovariateAnalysis/data/metadataSubset.csv",row.names=FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(RColorBrewer)
library(matrixStats)
library(ggplot2)
library(edgeR)
library(DESeq2)
library(limma)
library(doParallel)
library(variancePartition)
library(org.Hs.eg.db)
library(clusterProfiler)
library(GOSemSim)
library(biomaRt)
library(UpSetR)
library(VennDiagram)
library(ggrepel)
library(dplyr)
library(stringr)
library(forcats)
library(stats)
library(gridExtra)
metadata <- read.table("~/Desktop/ResearchProjects/LiverCancerProject/Metadata/metadata_for_de.csv", row.names=1,header=TRUE, sep=",") #changing the name of the file
tumorAdjacentExp <- read.table("~/Desktop/ResearchProjects/LiverCancer Project/Metadata/japan_all_samples_salmon_expression_counts.txt", row.names = 1, header=TRUE) #changing the name of the file
knitr::opts_chunk$set(echo = TRUE)
library(RColorBrewer)
library(matrixStats)
library(ggplot2)
library(edgeR)
library(DESeq2)
library(limma)
library(doParallel)
library(variancePartition)
library(org.Hs.eg.db)
library(clusterProfiler)
library(GOSemSim)
library(biomaRt)
library(UpSetR)
library(VennDiagram)
library(ggrepel)
library(dplyr)
library(stringr)
library(forcats)
library(stats)
library(gridExtra)
metadata <- read.table("~/Desktop/ResearchProjects/LiverCancerProject/Metadata/metadata_for_de.csv", row.names=1,header=TRUE, sep=",") #changing the name of the file
tumorAdjacentExp <- read.table("~/Desktop/ResearchProjects/LiverCancerProject/Metadata/japan_all_samples_salmon_expression_counts.txt", row.names = 1, header=TRUE) #changing the name of the file
colnames(tumorAdjacentExp) <- gsub("\\.", "-", colnames(tumorAdjacentExp)) #changing the column names
# Importing gene annotations
#genes <- read.table("gencode.v25.chr_patch_hapl_scaff.annotation.bed", header=FALSE, sep="\t")
genes <- read.table("~/Desktop/ResearchProjects/LiverCancerProject/Metadata/gencodeTranscripts.txt", header=TRUE, sep="\t")
genes <- data.frame(genes)
tumorAdjacentExp <- tumorAdjacentExp[rownames(tumorAdjacentExp) %in% genes$GENEID ,]
genes <- genes[match(rownames(tumorAdjacentExp), genes$GENEID),]
# Calculating gene length, this is needed for calculating the FPKM values
genes$length <- with(genes, end - start)
# Removing Samples due to low quality
metadata <- metadata[!(metadata$ID == "RK023") , ]
metadata <- metadata[!(metadata$ID == "RK106") , ]
metadata <- metadata[!(metadata$ID == "RK113") , ]
metadata <- metadata[!(metadata$ID == "RK135") , ]
metadata <- metadata[!(metadata$ID == "RK105") , ]
metadata <- metadata[!(metadata$ID == "RK116") , ]
metadata <- metadata[!(metadata$ID == "RK066") , ]
metadata <- metadata[!(metadata$ID == "RK096") , ]
#Removing both and NBNC samples
metadata <- metadata[!(metadata$Virus_infection == "NBNC"), ]
metadata <- metadata[!(metadata$Virus_infection == "both"), ]
# Subsetting and ordering metadata to match the count matrix
tumorAdjacentExpSubset <- tumorAdjacentExp[,colnames(tumorAdjacentExp) %in% metadata$sampleid]
metadataSubset <- metadata[metadata$sampleid %in% colnames(tumorAdjacentExpSubset),]
metadataSubset <- metadataSubset[match(colnames(tumorAdjacentExpSubset), metadataSubset$sampleid),]
rownames(metadataSubset) <- metadataSubset$sampleid
# Adding tissue type, converting categorical variables to factors
metadataSubset$tumor <- as.numeric(grepl('tumor', metadataSubset$sampleid, ignore.case=T))
#Swapping lesion type for sample RK169
metadataSubset["RK169-tumor-XY","tumor"] <- 0
metadataSubset["RK169-adjacent-XY","tumor"] <- 1
#Changing rownames to match swapped lesion type
rownames(metadataSubset)[rownames(metadataSubset)=="RK169-tumor-XY"] <- "RK169_adjacent-XY"
rownames(metadataSubset)[rownames(metadataSubset)=="RK169-adjacent-XY"] <- "RK169_tumor-XY"
rownames(metadataSubset)[rownames(metadataSubset)=="RK169_adjacent-XY"] <- "RK169-adjacent-XY"
rownames(tumorAdjacentExpSubset)[rownames(tumorAdjacentExpSubset)=="RK169-tumor-XY"] <- "RK169_adjacent-XY"
rownames(tumorAdjacentExpSubset)[rownames(tumorAdjacentExpSubset)=="RK169-adjacent-XY"] <- "RK169_tumor-XY"
rownames(tumorAdjacentExpSubset)[rownames(tumorAdjacentExpSubset)=="RK169_adjacent-XY"] <- "RK169-adjacent-XY"
#Swapping lesion type for sample RK065
metadataSubset["RK065-tumor-XX","tumor"] <- 0
metadataSubset["RK065-adjacent-XX","tumor"] <- 1
#Changing rownames in metadata to match swapped lesion type
rownames(metadataSubset)[rownames(metadataSubset)=="RK065-tumor-XY"] <- "RK065_adjacent-XY"
rownames(metadataSubset)[rownames(metadataSubset)=="RK065-adjacent-XY"] <- "RK065_tumor-XY"
rownames(metadataSubset)[rownames(metadataSubset)=="RK065_adjacent-XY"] <- "RK065-adjacent-XY"
rownames(tumorAdjacentExpSubset)[rownames(tumorAdjacentExpSubset)=="RK065-tumor-XY"] <- "RK065_adjacent-XY"
rownames(tumorAdjacentExpSubset)[rownames(tumorAdjacentExpSubset)=="RK065-adjacent-XY"] <- "RK065_tumor-XY"
rownames(tumorAdjacentExpSubset)[rownames(tumorAdjacentExpSubset)=="RK065_adjacent-XY"] <- "RK065-adjacent-XY"
metadataSubset$gender_tissue <- paste(metadataSubset$Gender, metadataSubset$tumor, sep="_")
metadataSubset$gender_tissue_viral <- paste(metadataSubset$gender_tissue, metadataSubset$Virus_infection, sep="_")
metadataSubset$library_type <- metadataSubset$strandedness
metadataSubset$library_type <- factor(metadataSubset$library_type)
metadataSubset$tumor <- factor(metadataSubset$tumor)
metadataSubset$Ta <- factor(metadataSubset$Ta)
metadataSubset$Portal_vein_invasion <- factor(metadataSubset$Portal_vein_invasion)
metadataSubset$Hepatic_vein_invasion <- factor(metadataSubset$Hepatic_vein_invasion)
metadataSubset$Bile_duct_invasion <- factor(metadataSubset$Bile_duct_invasion)
metadataSubset$Liver_fibrosisc <- factor(metadataSubset$Liver_fibrosisc)
metadataSubset$Prognosis <- factor(metadataSubset$Prognosis)
write.csv(x=metadataSubset,file="~/Desktop/ResearchProjects/LiverCancerProject/DEA_removed_samples/MedicalCovariateAnalysis/data/metadataSubset.csv",row.names=FALSE)
#subset metadataSubset data frame by male samples
Male <- metadataSubset[grepl("XY",rownames(metadataSubset)),]
#subset metadataSubset data frame by male tumor samples
MaleTumor<-  Male[grepl("tumor",rownames(Male)),]
#subset metadataSubset by male adjacent samples
MaleAdjacent <- Male[grepl("adjacent", rownames(Male)),]
#subset metadataSubset data frame by female samples
Female <- metadataSubset[grepl("XX",rownames(metadataSubset)),]
#subset metadataSubset data frame female tumor samples
FemaleTumor <- Female[grepl("tumor",rownames(Female)),]
#subset metadataSubset data frame female tumor adjacent samples
FemaleAdjacent <- Female[grepl("adjacent", rownames(Female)),]
#subsetting age of male samples
MaleAge<- Male$Age
#subsetting age of female samples
FemaleAge<- Female$Age
#f test alpha=0.05
var.test(MaleAge, FemaleAge) #Fail to reject null no evidence variance different
#variances equal
#t test alpha=0.05
t.test(MaleAge,FemaleAge,var.equal=TRUE) #Reject null age of male significantly different than females
#means significantly different
#subsetting by tumor size in female tumor samples
FemaleSize <- FemaleTumor$Tumor_size_mm
#subsetting by tumor size in male tumor samples
MaleSize<- MaleTumor$Tumor_size_mm
#f test alpha=0.05
var.test(MaleSize, FemaleSize) #reject null variances significantly different
#variances unequal
#t test tumor size alpha=0.05
t.test(MaleSize,FemaleSize) #Do not reject null no evidence tumor size is different
#no significant difference
#subsetting overall survival month from male tumor sample
MaleSurvivalMonth<- MaleTumor$Overall_survival_month
#subsetting overall survival month from female tumor sample
FemaleSurvivalMonth<- FemaleTumor$Overall_survival_month
#f test overall survival month alpha=0.05
var.test(MaleSurvivalMonth, FemaleSurvivalMonth) #fail to reject null no evidence variances are different
#variances are equal
#t test overall survival month alpha=0.05
t.test(MaleSurvivalMonth, FemaleSurvivalMonth, var.equal = TRUE) #Reject null survival month significantly different
#significant difference
View(metadataSubset)
