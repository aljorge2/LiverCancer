pdf("~/Desktop/ResearchProjects/LiverCancer/DEA_removed_samples/newFigures/MDSplots/smoking.pdf")
plotMDS(Tumor, top = 25, dim.plot = c(1,2), plot=TRUE, cex=2,
pch=ifelse(identifiers$sex %in% c("F"),17, 15),
col=ifelse(identifiers$Smoking %in% c("1"), "#1A85FF", "#D41159"),
gene.selection = "common")
legend("bottomright", pch=c(15),
col=c("#D41159", "#1A85FF") ,
legend=c("Smoking", "Not smoking"))
legend("center", pch=c(17, 15),
col=c("black"),
legend=c("Female", "Male"))
dev.off()
plotMDS(Tumor, top = 25, dim.plot = c(1,2), plot=TRUE, cex=2,
pch=ifelse(identifiers$sex %in% c("F"),17, 15),
col=ifelse(identifiers$Smoking %in% c("1"), "#1A85FF", "#D41159"),
gene.selection = "common")
legend("topleft", pch=c(15),
col=c("#D41159", "#1A85FF") ,
legend=c("Smoking", "Not Smoking"))
legend("center", pch=c(17, 15),
col=c("black"),
legend=c("Female", "Male"))
View(identifiers)
pdf("~/Desktop/ResearchProjects/LiverCancer/DEA_removed_samples/newFigures/MDSplots/smoking.pdf")
plotMDS(Tumor, top = 25, dim.plot = c(1,2), plot=TRUE, cex=2,
pch=ifelse(identifiers$sex %in% c("F"),17, 15),
col=ifelse(identifiers$smoking %in% c("1"), "#1A85FF", "#D41159"),
gene.selection = "common")
legend("bottomright", pch=c(15),
col=c("#D41159", "#1A85FF") ,
legend=c("Smoking", "Not smoking"))
legend("center", pch=c(17, 15),
col=c("black"),
legend=c("Female", "Male"))
dev.off()
plotMDS(Tumor, top = 25, dim.plot = c(1,2), plot=TRUE, cex=2,
pch=ifelse(identifiers$sex %in% c("F"),17, 15),
col=ifelse(identifiers$smoking %in% c("1"), "#1A85FF", "#D41159"),
gene.selection = "common")
legend("topleft", pch=c(15),
col=c("#D41159", "#1A85FF") ,
legend=c("Smoking", "Not Smoking"))
legend("center", pch=c(17, 15),
col=c("black"),
legend=c("Female", "Male"))
pdf("~/Desktop/ResearchProjects/LiverCancer/DEA_removed_samples/newFigures/MDSplots/smoking.pdf")
plotMDS(Tumor, top = 25, dim.plot = c(1,2), plot=TRUE, cex=2,
pch=ifelse(identifiers$sex %in% c("F"),17, 15),
col=ifelse(identifiers$smoking %in% c("1"), "#D41159", "#1A85FF"),
gene.selection = "common")
legend("bottomright", pch=c(15),
col=c("#1A85FF", "#D41159") ,
legend=c("Smoking", "Not smoking"))
legend("center", pch=c(17, 15),
col=c("black"),
legend=c("Female", "Male"))
dev.off()
plotMDS(Tumor, top = 25, dim.plot = c(1,2), plot=TRUE, cex=2,
pch=ifelse(identifiers$sex %in% c("F"),17, 15),
col=ifelse(identifiers$smoking %in% c("1"), "#D41159","#1A85FF"),
gene.selection = "common")
legend("topleft", pch=c(15),
col=c("#1A85FF", "#D41159") ,
legend=c("Smoking", "Not Smoking"))
legend("center", pch=c(17, 15),
col=c("black"),
legend=c("Female", "Male"))
identifiers$alcohol
pdf("~/Desktop/ResearchProjects/LiverCancer/DEA_removed_samples/newFigures/MDSplots/alcohol.pdf")
mds <- plotMDS(Tumor, top = 25, ndim = 10, dim.plot = c(3,4), plot=TRUE, cex=2,
pch=ifelse(identifiers$sex %in% c("F"),17, 15),
col= ifelse(identifiers$Alcohol=="1","#FFC20A", #one means intake level zero
ifelse(identifiers$Alcohol=="2", "#E66100", #two means intake level one
ifelse(identifiers$Alcohol=="3", "#40B0A6","#006CD1"))), gene.selection = "common") # three means intake level two
legend("bottomleft", pch=c(15),
col=c( "#FFC20A", "#E66100","#40B0A6", "#006CD1"),
legend=c("No alcohol","Severity 1", "Severity 2","Severity 3"))
legend("topleft", pch=c(17, 15),
col=c("black"),
legend=c("Female", "Male"))
dev.off()
mds <- plotMDS(Tumor, top = 25, ndim = 10, dim.plot = c(3,4), plot=TRUE, cex=2,
pch=ifelse(identifiers$sex %in% c("F"),17, 15),
col= ifelse(identifiers$Alcohol=="1","#FFC20A",
ifelse(identifiers$Alcohol=="2", "#E66100",
ifelse(identifiers$Alcohol=="3", "#40B0A6","#006CD1"))), gene.selection = "common")
legend("bottom", pch=c(15),
col=c( "#FFC20A", "#E66100","#40B0A6", "#006CD1"),
legend=c("No alcohol","Severity 1", "Severity 2","Severity 3"))
legend("top", pch=c(17, 15),
col=c("black"),
legend=c("Female", "Male"))
pdf("~/Desktop/ResearchProjects/LiverCancer/DEA_removed_samples/newFigures/MDSplots/alcohol.pdf")
mds <- plotMDS(Tumor, top = 25, ndim = 10, dim.plot = c(3,4), plot=TRUE, cex=2,
pch=ifelse(identifiers$sex %in% c("F"),17, 15),
col= ifelse(identifiers$alcohol=="1","#FFC20A", #one means intake level zero
ifelse(identifiers$alcohol=="2", "#E66100", #two means intake level one
ifelse(identifiers$alcohol=="3", "#40B0A6","#006CD1"))), gene.selection = "common") # three means intake level two
legend("bottomleft", pch=c(15),
col=c( "#FFC20A", "#E66100","#40B0A6", "#006CD1"),
legend=c("No alcohol","Severity 1", "Severity 2","Severity 3"))
legend("topleft", pch=c(17, 15),
col=c("black"),
legend=c("Female", "Male"))
dev.off()
mds <- plotMDS(Tumor, top = 25, ndim = 10, dim.plot = c(3,4), plot=TRUE, cex=2,
pch=ifelse(identifiers$sex %in% c("F"),17, 15),
col= ifelse(identifiers$alcohol=="1","#FFC20A",
ifelse(identifiers$alcohol=="2", "#E66100",
ifelse(identifiers$alcohol=="3", "#40B0A6","#006CD1"))), gene.selection = "common")
legend("bottom", pch=c(15),
col=c( "#FFC20A", "#E66100","#40B0A6", "#006CD1"),
legend=c("No alcohol","Severity 1", "Severity 2","Severity 3"))
legend("top", pch=c(17, 15),
col=c("black"),
legend=c("Female", "Male"))
pdf("~/Desktop/ResearchProjects/LiverCancer/DEA_removed_samples/newFigures/MDSplots/alcohol.pdf")
mds <- plotMDS(Tumor, top = 25, ndim = 10, dim.plot = c(1,2), plot=TRUE, cex=2,
pch=ifelse(identifiers$sex %in% c("F"),17, 15),
col= ifelse(identifiers$alcohol=="1","#FFC20A", #one means intake level zero
ifelse(identifiers$alcohol=="2", "#E66100", #two means intake level one
ifelse(identifiers$alcohol=="3", "#40B0A6","#006CD1"))), gene.selection = "common") # three means intake level two
legend("bottomleft", pch=c(15),
col=c( "#FFC20A", "#E66100","#40B0A6", "#006CD1"),
legend=c("No alcohol","Severity 1", "Severity 2","Severity 3"))
legend("topleft", pch=c(17, 15),
col=c("black"),
legend=c("Female", "Male"))
dev.off()
mds <- plotMDS(Tumor, top = 25, ndim = 10, dim.plot = c(1,2), plot=TRUE, cex=2,
pch=ifelse(identifiers$sex %in% c("F"),17, 15),
col= ifelse(identifiers$alcohol=="1","#FFC20A",
ifelse(identifiers$alcohol=="2", "#E66100",
ifelse(identifiers$alcohol=="3", "#40B0A6","#006CD1"))), gene.selection = "common")
legend("bottom", pch=c(15),
col=c( "#FFC20A", "#E66100","#40B0A6", "#006CD1"),
legend=c("No alcohol","Severity 1", "Severity 2","Severity 3"))
legend("top", pch=c(17, 15),
col=c("black"),
legend=c("Female", "Male"))
mds <- plotMDS(Tumor, top = 25, ndim = 10, dim.plot = c(1,2), plot=TRUE, cex=2,
pch=ifelse(identifiers$sex %in% c("F"),17, 15),
col= ifelse(identifiers$fibrosis=="1","#FFC20A", #one = fibrosis level zero
ifelse(identifiers$fibrosis=="2", "#E66100", #two = fibrosis level one
ifelse(identifiers$fibrosis=="3", "#40B0A6",#three = fibrosis level two
ifelse(identifiers$fibrosis== "4", "#006CD1", "darkblue")))), gene.selection = "common")
legend("center", pch=c(15),
col=c( "#FFC20A", "#E66100","#40B0A6", "#006CD1", "darkblue"),
legend=c("No Fibrosis","Severity 1", "Severity 2","Severity 3", "Severity 4"))
legend("topleft", pch=c(17, 15),
col=c("black"),
legend=c("Female", "Male"))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
#reading in Full meta dataset
metadata <- read.table("~/Desktop/ResearchProjects/LiverCancerProject/Metadata/Full_RIKEN_clinical_data.csv", row.names=1,header=TRUE, sep=",")
#reading in meta dataset
metadataSmall <- read.csv("~/Desktop/ResearchProjects/LiverCancerProject/DEA_removed_samples/MedicalCovariateAnalysis/data/metadataSubset.csv", row.names=1)
#subsetting full metadata for samples used in analysis
metadataAnalysis <- metadata[rownames(metadata) %in% metadataSmall$ID,]
#subsetting male samples
Male <- metadataAnalysis[which(metadataAnalysis$Gender== "M"),]
#subsetting female samples
Female <- metadataAnalysis[which(metadataAnalysis$Gender== "F"),]
#subsetting age of male samples
MaleAge<- Male$Age
#subsetting age of female samples
FemaleAge<- Female$Age
#f test alpha=0.05
var.test(MaleAge, FemaleAge) #Fail to reject null no evidence variance different
#variances equal
#t test alpha=0.05
t.test(MaleAge,FemaleAge,var.equal=TRUE) #Fail to reject null mean age of males and females not significantly different
# Create side-by-side boxplots
par(mfrow = c(1, 2))  # Set up a 1x2 layout for two plots
# Boxplot for MaleAge
boxplot(MaleAge, main = "Distribution of Male Ages", ylab = "Ages", col = "#FFC20A")
# Boxplot for FemaleAge
boxplot(FemaleAge, main = "Distribution of Female Ages", ylab = "Ages", col = "#40B0A6")
# Reset the layout to default (1x1) after creating the plots
par(mfrow = c(1, 1))
#male stage separated by severity
Male1st<- nrow(Male[Male$Ta== "1", ])
Male2st<- nrow(Male[Male$Ta== "2", ])
Male3st<- nrow(Male[Male$Ta== "3", ])
Male4st<- nrow(Male[Male$Ta== "4", ])
#female stage separated by severity
Female1st<- nrow(Female[Female$Ta== "1", ])
Female2st<- nrow(Female[Female$Ta== "2", ])
Female3st<- nrow(Female[Female$Ta== "3", ])
Female4st<- nrow(Female[Female$Ta== "4", ])
#counts of tumor stage
TumorStage<- data.frame(Males= c(Male1st,Male2st,Male3st,Male4st), Females= c(Female1st, Female2st, Female3st,Female4st))
rownames(TumorStage)<- c(1,2,3,4)
#conducting chi square alpha 0.05
chisq.test(TumorStage)
#using different integrator because of warning
chisq.test(TumorStage, simulate.p.value = TRUE, B = 10000)
#sums of rows in TumorStage
TumorStageCounts<-c(27,72,42,9)
#add sums of rows to TumorSTage
TumorStage<- cbind(TumorStage,TumorStageCounts)
#sums of columns in TumorStage
StageTotalCounts<-c(108,42,150)
#add sums of column to TumorStage
TumorStage<- rbind(TumorStage,StageTotalCounts)
rownames(TumorStage)<- c("1","2","3","4","Totals")
TumorStage
# Sample data with sex, stage, and counts
data <- data.frame(
Sex = rep(c("Males", "Females"), each = 4),
Category = rep(c("Stage 1", "Stage 2", "Stage 3", "Stage 4"), times = 2),
Percentage = c(17, 48, 36, 7, 10, 24, 6, 2)
)
#colors for graph
custom_colors <- c("#40B0A6", "#FFC20A")
# Calculate the percentages within each group
data <- transform(data, Percentage = Percentage / tapply(Percentage, Sex, sum)[Sex] * 100)
# Create a percentage paired bar graph
ggplot(data, aes(x = Category, y = Percentage, fill = Sex, group = Sex)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Percentage Bar Graph Tumor Stage",
x = "Tumor Stage",
y = "Percentage") +geom_text(aes(label = sprintf("%.1f%%", Percentage)),
position = position_dodge(width = 0.9),    # Adjust the width as needed
vjust = -0.5, hjust = 0.5, size = 3) +  scale_fill_manual(values = custom_colors) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
theme_minimal()
#counting number of samples without cancer in nodes
MaleNodes<- nrow(Male[Male$N=="1",])
FemaleNodes<- nrow(Female[Female$N=="1",])
print(MaleNodes)
print(FemaleNodes)
#counting number of samples without metastasis
MaleMetastasis<- nrow(Male[Male$M=="1",])
FemaleMetastasis<- nrow(Female[Female$M=="1",])
print(MaleMetastasis)
print(FemaleMetastasis)
#replacing NAs with Zeros. Assuming that NA means that the tumor was not graded
Male[is.na(Male)] <-0
Female[is.na(Female)] <-0
#male grade separated by severity
MaleEg0<- nrow(Male[Male$Edmondson.grade=="0", ])
MaleEg1<- nrow(Male[Male$Edmondson.grade=="1", ])
MaleEg1.5<- nrow(Male[Male$Edmondson.grade=="1~2", ])
MaleEg2<- nrow(Male[Male$Edmondson.grade=="2", ])
MaleEg2.5<- nrow(Male[Male$Edmondson.grade=="2~3", ])
MaleEg3<- nrow(Male[Male$Edmondson.grade=="3", ])
MaleEg4<- nrow(Male[Male$Edmondson.grade=="4", ])
#female grade separated by severity
FemaleEg0<- nrow(Female[Female$Edmondson.grade=="0", ])
FemaleEg1<- nrow(Female[Female$Edmondson.grade=="1", ])
FemaleEg1.5<- nrow(Female[Female$Edmondson.grade=="1~2", ])
FemaleEg2<- nrow(Female[Female$Edmondson.grade=="2", ])
FemaleEg2.5<- nrow(Female[Female$Edmondson.grade=="2~3", ])
FemaleEg3<- nrow(Female[Female$Edmondson.grade=="3", ])
FemaleEg4<- nrow(Female[Female$Edmondson.grade=="4", ])
#creating dataframe for edmondson grade
EdmondsonGrade<- data.frame(Males= c(MaleEg0,MaleEg1,MaleEg1.5,MaleEg2,MaleEg2.5,MaleEg3,MaleEg4), Females= c(FemaleEg0,FemaleEg1, FemaleEg1.5, FemaleEg2,FemaleEg2.5,FemaleEg3,FemaleEg4))
rownames(EdmondsonGrade)<- c(0,1,1.5,2,2.5,3,4)
#chi square test alpha 0.05
chisq.test(EdmondsonGrade)
#ran using different integrator because of warning
chisq.test(EdmondsonGrade, simulate.p.value = TRUE, B = 10000)
#cannot reject null
EdmondsonHist <- t(EdmondsonGrade)
EdmondsonHist <- as.matrix(EdmondsonHist)
barplot(EdmondsonHist, beside = TRUE, ylim = c(0,70), col = c("#FFC20A", "#40B0A6"), names.arg = c(0,1,1.5,2,2.5,3,4),
legend.text = c("Males", "Females"), xlab = "Edmondson Grade", ylab = "Counts",
main = "Edmondson Grade Paired Bar Plot")
#sums of rows in EdmondsonGrade
EdmondsonGradeCounts<-c(1,14,8,87,23,16,1)
#add sums of rows to EdmondsonGrade
EdmondsonGrade<- cbind(EdmondsonGrade,EdmondsonGradeCounts)
#sums of columns in EdmondsonGrade
GradeTotalCounts<-c(108,42,150)
#add sums of column to EdmondsonGrade
EdmondsonGrade<- rbind(EdmondsonGrade,GradeTotalCounts)
rownames(EdmondsonGrade)<- c("0","1","1.5","2","2.5","3","4","Totals")
EdmondsonGrade
# Sample data with sex grade and count data
data <- data.frame(
Sex = rep(c("Males", "Females"), each = 7),
Category = rep(c("Grade 0", "Grade 1", "Grade 1.5", "Grade 2", "Grade 2.5", "Grade 3", "Grade 4"), times = 2),
Percentage = c(1, 11, 5, 64, 14, 12, 1, 0, 3, 3, 23, 9, 4, 0)
)
custom_colors <- c("#40B0A6", "#FFC20A")
# Calculate the percentages within each group
data <- transform(data, Percentage = Percentage / tapply(Percentage, Sex, sum)[Sex] * 100)
# Create a percentage paired bar graph
ggplot(data, aes(x = Category, y = Percentage, fill = Sex, group = Sex)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Percentage Bar Graph Edmondson Grade",
x = "Edmondson Grade",
y = "Percentage") +geom_text(aes(label = sprintf("%.1f%%", Percentage)),
position = position_dodge(width = 0.9),    # Adjust the width as needed
vjust = -0.5, hjust = 0.5, size = 3) +  scale_fill_manual(values = custom_colors) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
theme_minimal()
#subsetting by tumor size in female samples
FemaleSize <- Female$Tumor.size..mm.
#subsetting by tumor size in male samples
MaleSize<- Male$Tumor.size..mm.
#f test alpha=0.05
var.test(MaleSize, FemaleSize) #reject null variances significantly different
#variances unequal
#t test tumor size alpha=0.05
t.test(MaleSize,FemaleSize) #Do not reject null no evidence tumor size is different
#no significant difference
# Create side-by-side boxplots
par(mfrow = c(1, 2))  # Set up a 1x2 layout for two plots
# Boxplot for MaleAge
boxplot(MaleSize, main = "Distribution of Male Tumor Size", ylab = "Size in mm", col = "#FFC20A")
# Boxplot for FemaleAge
boxplot(FemaleSize, main = "Distribution of Female Tumor Size", ylab = "Size in mm", col = "#40B0A6", ylim = c(0,300))
# Reset the layout to default (1x1) after creating the plots
par(mfrow = c(1, 1))
#male fibrosis separated by severity
Male0F<- nrow(Male[Male$Liver.fibrosisc== "0", ])
Male1F<- nrow(Male[Male$Liver.fibrosisc== "1", ])
Male2F<- nrow(Male[Male$Liver.fibrosisc== "2", ])
Male3F<- nrow(Male[Male$Liver.fibrosisc== "3", ])
Male4F<- nrow(Male[Male$Liver.fibrosisc== "4", ])
#female fibrosis
Female0F<- nrow(Female[Female$Liver.fibrosisc== "0", ])
Female1F<- nrow(Female[Female$Liver.fibrosisc== "1", ])
Female2F<- nrow(Female[Female$Liver.fibrosisc== "2", ])
Female3F<- nrow(Female[Female$Liver.fibrosisc== "3", ])
Female4F<- nrow(Female[Female$Liver.fibrosisc== "4", ])
#counts of liver fibrosis
LiverFibrosis<- data.frame(Males= c(Male0F,Male1F,Male2F,Male3F,Male4F), Females= c(Female0F, Female1F, Female2F,Female3F,Female4F))
#chi square test alpha 0.05
chisq.test(LiverFibrosis)
#using different integrator because of warning
chisq.test(LiverFibrosis, simulate.p.value = TRUE, B = 10000)
#sums of rows in LiverFibrosis
LiverFibrosisCounts<-c(5,16,30,40,59)
#add sums of rows to LiverFibrosis
LiverFibrosis<- cbind(LiverFibrosis,LiverFibrosisCounts)
#sums of columns in LiverFibrosis
LiverTotalCounts<-c(108,42,150)
#add sums of column to LiverFibrosis
LiverFibrosis<- rbind(LiverFibrosis,LiverTotalCounts)
rownames(LiverFibrosis)<- c("0","1","2","3","4","Totals")
LiverFibrosis
# Sample data with sex level of fibrosis and count data
data <- data.frame(
Sex = rep(c("Males", "Females"), each = 5),
Category = rep(c("Severity 0", "Severity 1", "Severity 2", "Severity 3", "Severity 4"), times = 2),
Percentage = c(5, 13, 25, 26, 39, 0, 3, 5, 14, 20)
)
custom_colors <- c("#40B0A6", "#FFC20A") # colors denoting the sex
# Calculate the percentages within each group
data <- transform(data, Percentage = Percentage / tapply(Percentage, Sex, sum)[Sex] * 100)
# Create a percentage paired bar graph
ggplot(data, aes(x = Category, y = Percentage, fill = Sex, group = Sex)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Percentage Bar Graph Liver Fibrosis",
x = "Severity",
y = "Percentage") +geom_text(aes(label = sprintf("%.1f%%", Percentage)),
position = position_dodge(width = 0.9),    # Adjust the width as needed
vjust = -0.5, hjust = 0.5, size = 3) +  scale_fill_manual(values = custom_colors) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
theme_minimal()
#male alcohol intake separated by severity
Male0<- nrow(Male[Male$Alcohol.intakee== "0", ])
Male1<- nrow(Male[Male$Alcohol.intakee== "1", ])
Male2<- nrow(Male[Male$Alcohol.intakee== "2", ])
Male3<- nrow(Male[Male$Alcohol.intakee== "3", ])
MaleAlcohol<- as.data.frame(cbind(Male0,Male1,Male2,Male3))
#female alcohol
Female0<- nrow(Female[Female$Alcohol.intakee== "0", ])
Female1<- nrow(Female[Female$Alcohol.intakee== "1", ])
Female2<- nrow(Female[Female$Alcohol.intakee== "2", ])
Female3<- nrow(Female[Female$Alcohol.intakee== "3", ])
FemaleAlcohol<- as.data.frame(cbind(Female0,Female1,Female2,Female3))
#counts of alcohol intake
AlcoholIntake<- as.data.frame(cbind(Males= c(Male0,Male1,Male2,Male3), Females= c(Female0, Female1, Female2,Female3)))
rownames(AlcoholIntake)<- c(0,1,2,3)
#chi square test alpha of 0.05
chisq.test(AlcoholIntake)
# reject null hypothesis
#transposing data for paired bar plot
AlcoholIntake <- t(AlcoholIntake)
AlcoholIntake <- as.matrix(AlcoholIntake)
#paired bar plot
barplot(AlcoholIntake, beside = TRUE, ylim = c(0,40), col = c("#FFC20A", "#40B0A6"), names.arg = c(0,1,2,3),
legend.text = c("Males", "Females"), xlab = "Level of Severity", ylab = "Counts",
main = "Alcohol Intake Paired Bar Plot")
#transposing data
AlcoholIntake <- as.data.frame(AlcoholIntake)
AlcoholIntake <- t(AlcoholIntake)
#sums of rows in Alcoholintake
AlcoholTotalCounts<-c(63,25,42,20)
#add sums of rows to AlcoholIntake
AlcoholIntake<- cbind(AlcoholIntake,AlcoholTotalCounts)
#sums of columns in AlcoholIntake
AlcoholTotalCounts<-c(108,42,150)
#add sums of column to AlcoholIntake
AlcoholIntake<- rbind(AlcoholIntake,AlcoholTotalCounts)
rownames(AlcoholIntake)<- c("0","1","2","3","Totals")
AlcoholIntake
# Sample data sex level of alcohol intake and sample count
data <- data.frame(
Sex = rep(c("Males", "Females"), each = 4),
Category = rep(c("Level 0", "Level 1", "Level 2", "Level 3"), times = 2),
Percentage = c(31, 20, 37, 20, 32, 5, 5, 0)
)
custom_colors <- c("#40B0A6", "#FFC20A")
# Calculate the percentages within each group
data <- transform(data, Percentage = Percentage / tapply(Percentage, Sex, sum)[Sex] * 100)
# Create a percentage paired bar graph
ggplot(data, aes(x = Category, y = Percentage, fill = Sex, group = Sex)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Percentage Bar Graph Alcohol Intake",
x = "Level of Intake",
y = "Percentage") +geom_text(aes(label = sprintf("%.1f%%", Percentage)),
position = position_dodge(width = 0.9),    # Adjust the width as needed
vjust = -0.5, hjust = 0.5, size = 3) +  scale_fill_manual(values = custom_colors) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
theme_minimal()
#number of male smokers
MaleSmokers<-sum(Male$Smoking)
MaleSmokers
#number of female smokers
FemaleSmokers<- sum(Female$Smoking)
FemaleSmokers
# alpha=0.05
prop.test(x=c(MaleSmokers,FemaleSmokers), n= c(108,42), p = NULL, alternative = "two.sided", correct = TRUE) #reject null hypothesis that there is no difference between the number of men and women that smoke
#the number of men and women that smoke is significantly different
#creating data frame with sex, smoking, and sample counts
data <- data.frame(
Sex = rep(c("Males", "Females"), each = 2),
Category = rep(c("Does Smoke", "Does Not Smoke"), times = 2),
Percentage = c(83,25,4,38))
custom_colors <- c("#40B0A6", "#FFC20A")
# Calculate the percentages within each group
data <- transform(data, Percentage = Percentage / tapply(Percentage, Sex, sum)[Sex] * 100)
# Create a percentage paired bar graph
ggplot(data, aes(x = Category, y = Percentage, fill = Sex, group = Sex)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Percentage Bar Graph Smoking",
x = "Smoking",
y = "Percentage") +geom_text(aes(label = sprintf("%.1f%%", Percentage)),
position = position_dodge(width = 0.9),    # Adjust the width as needed
vjust = -0.5, hjust = 0.5, size = 3) +  scale_fill_manual(values = custom_colors) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
theme_minimal()
#male prognosis separated by severity?
MaleProg0<- nrow(Male[Male$Prognosisf=="0",])
MaleProg1<- nrow(Male[Male$Prognosisf=="1",])
MaleProg2<- nrow(Male[Male$Prognosisf=="2",])
MaleProg3<- nrow(Male[Male$Prognosisf=="3",])
#female prognosis separated by severity?
FemaleProg0<- nrow(Female[Female$Prognosisf=="0",])
FemaleProg1<- nrow(Female[Female$Prognosisf=="1",])
FemaleProg2<- nrow(Female[Female$Prognosisf=="2",])
FemaleProg3<- nrow(Female[Female$Prognosisf=="3",])
#counts of Prognosis
Prognosis<- as.data.frame(cbind(Males= c(MaleProg0,MaleProg1,MaleProg2,MaleProg3), Females= c(FemaleProg0, FemaleProg1,FemaleProg2,FemaleProg3)))
chisq.test(Prognosis)
#using different integrator because of warning
chisq.test(Prognosis, simulate.p.value = TRUE, B = 10000)
#sums of rows in Prognosis
PrognosisCounts<-c(124,21,3,2)
#add sums of rows to Prognosis
Prognosis<- cbind(Prognosis,PrognosisCounts)
#sums of columns in Prognosis
PrognosisTotalCounts<-c(108,42,150)
#add sums of column to Prognosis
Prognosis<- rbind(Prognosis,PrognosisTotalCounts)
rownames(Prognosis)<- c("0","1","2","3","Totals")
Prognosis
# Sample data with sex level of prognosis and sample count
data <- data.frame(
Sex = rep(c("Males", "Females"), each = 4),
Category = rep(c("Level 0", "Level 1", "Level 2", "Level 3"), times = 2),
Percentage = c(92, 13, 2, 1, 32, 8, 1, 1)
)
custom_colors <- c("#40B0A6", "#FFC20A")
# Calculate the percentages within each group
data <- transform(data, Percentage = Percentage / tapply(Percentage, Sex, sum)[Sex] * 100)
# Create a percentage paired bar graph
ggplot(data, aes(x = Category, y = Percentage, fill = Sex, group = Sex)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Percentage Bar Graph Prognosis",
x = "Level of Severity",
y = "Percentage") +geom_text(aes(label = sprintf("%.1f%%", Percentage)),
position = position_dodge(width = 0.9),    # Adjust the width as needed
vjust = -0.5, hjust = 0.5, size = 3) +  scale_fill_manual(values = custom_colors) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
theme_minimal()
#subsetting overall survival month from male sample
MaleSurvivalMonth<- Male$Overall.survival..month.
#subsetting overall survival month from female sample
FemaleSurvivalMonth<- Female$Overall.survival..month.
#f test overall survival month alpha=0.05
var.test(MaleSurvivalMonth, FemaleSurvivalMonth) #fail to reject null no evidence variances are different
#variances are equal
#t test overall survival month alpha=0.05
t.test(MaleSurvivalMonth, FemaleSurvivalMonth, var.equal = TRUE) #Reject null survival month significantly different
#significant difference
pdf("~/Desktop/ResearchProjects/LiverCancer/DEA_removed_samples/newFigures/MedicalCovariateAnalysis/AgeBoxPlot.pdf")
# Create side-by-side boxplots
par(mfrow = c(1, 2))  # Set up a 1x2 layout for two plots
# Boxplot for MaleAge
boxplot(MaleAge, main = "Distribution of Male Ages", ylab = "Ages", col = "#FFC20A")
# Boxplot for FemaleAge
boxplot(FemaleAge, main = "Distribution of Female Ages", ylab = "Ages", col = "#40B0A6")
# Reset the layout to default (1x1) after creating the plots
par(mfrow = c(1, 1))
dev.off()
