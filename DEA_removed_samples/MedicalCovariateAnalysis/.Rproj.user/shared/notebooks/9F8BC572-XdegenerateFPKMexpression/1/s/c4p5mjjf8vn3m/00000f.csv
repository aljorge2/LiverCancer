"0",""
"0","# Pulling X degenerate expression data from dge variable into individual variables"
"0",""
"0","dge <- as.data.frame(dge)"
"0","gene0 <- dge[which(dge$gene_name==""KDM5D""),]"
"0","gene1 <- dge[which(dge$gene_name==""DDX3Y""),]"
"0","gene2 <- dge[which(dge$gene_name==""EIF1AY""),]"
"0","gene3 <- dge[which(dge$gene_name==""TXLNGY""),]"
"0","gene4 <- dge[which(dge$gene_name==""TSPY1""),]"
"0","gene5 <- dge[which(dge$gene_name==""AR""),]"
"0","gene6 <- dge[which(dge$gene_name==""XIST""),]"
"0",""
"0","#creating data frame of all genes we will be working with"
"0","xDegenerateExpression<- rbind(gene0,gene1,gene2,gene3,gene4)"
"0","rownames(xDegenerateExpression) <- xDegenerateExpression$gene_name"
"0","xDegenerateExpression <- subset(xDegenerateExpression, select = -c(chr, start, end, TXNAME, GENEID, length,gene_name))"
"0","xDegenerateExpression<- t(xDegenerateExpression)"
"0","xDegenerateExpression <- as.data.frame(xDegenerateExpression)"
"0","#making the gene names the rownames "
"0","#rownames(xDegenerateExpression) <- xDegenerateExpression$gene_name"
"0",""
"0","#subsetting out all columns that are not expression data"
"0"," # xDegenerateExpression <- as.data.frame(t(xDegenerateExpression))"
"0",""
"0","#subsetting by tumor "
"0","Tumor_expressionData <- xDegenerateExpression[grepl(""tumor"",rownames(xDegenerateExpression),fixed=TRUE),]"
"0","Tumor_expressionData <- as.data.frame(Tumor_expressionData)"
"0","Tumor_expressionData<- t(Tumor_expressionData)"
"0","Tumor_expressionData <- as.data.frame(Tumor_expressionData)"
"0",""
"0","Adjacent_expressionData <- xDegenerateExpression[grepl(""adjacent"",rownames(xDegenerateExpression),fixed=TRUE),]"
"0","Adjacent_expressionData <- as.data.frame(Adjacent_expressionData)"
"0","Adjacent_expressionData<- t(Adjacent_expressionData)"
"0","Adjacent_expressionData <- as.data.frame(Adjacent_expressionData)"
"0",""
"0","#Creating Names column"
"0","#for (i in 1:dim(Tumor_expressionData)[1]) {"
"0","#    Tumor_expressionData$Names[i] = substr(row.names(Tumor_expressionData)[i],3,5)"
"0","#}"
"0","#Tumor_expressionData$group<- 1:149"
